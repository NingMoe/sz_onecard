CREATE OR REPLACE PROCEDURE SP_PN_QUERY
(
    P_FUNCCODE    VARCHAR2,
    P_VAR1        VARCHAR2,
    P_VAR2        VARCHAR2,
    P_VAR3        VARCHAR2,
    P_VAR4        VARCHAR2,
    P_VAR5        VARCHAR2,
    P_VAR6        VARCHAR2,
    P_VAR7        VARCHAR2,
    P_VAR8 IN OUT VARCHAR2,
    P_VAR9 IN OUT VARCHAR2,
    P_CURSOR  OUT SYS_REFCURSOR
)
AS
	v_I		INT;
	V_1		INT;
	V_2		INT;
	V_3		INT;
	V_N		CHAR(2);
	v_sql	VARCHAR2(20480);

BEGIN

IF  P_FUNCCODE = 'QUERYPNSYNC' THEN -- 查询接口同步情况
    OPEN P_CURSOR FOR
    SELECT T.TRADEID 同步流水号,
		DECODE(T.SYNCTYPECODE,'2101','批量文件上传','2102','批量文件下载',T.SYNCTYPECODE) 同步类型,
		DECODE(T.SYNCCODE,'0','未同步','1','同步成功','2','同步失败',T.SYNCCODE) 同步状态,
		DECODE(SUBSTR(T.FILEPATH,1,5),'OBAB_','银行备付金信息明细文件','OCAB_','银行备付金交易明细文件',
		'OCJNL','支付机构备付金信息明细文件','OCJBA','支付机构交易流水明细文件',
		'REQ_C','客户基本信息文件',SUBSTR(T.FILEPATH,1,5)) 文件类型,
		B.SYSTEMNAME 同步发起方,
		T.SYNERRINFO 同步异常信息,
		T.SYNCTIME 同步完成时间,
		DECODE(T.FILECODE,'0','未处理','1','正在处理','2','处理成功','3','处理失败',T.FILECODE) 文件处理结果,
		T.FILETIME 文件处理完成时间,
		T.FILEERRORINFO 文件处理异常信息
	FROM TF_B_BFJ_SYNC t,TD_M_BFJ_BANK B
	WHERE T.SYNCHOME = B.SYSTEMCODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.SYNCTIME,'YYYYMMDD'))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.SYNCTIME,'YYYYMMDD'))
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 = T.SYNCCODE)
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 >= T.SYNCHOME)
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 < T.SYNCTYPECODE)
	ORDER BY T.FILETIME
	;
ELSIF P_FUNCCODE='QUERYPNBANK' THEN--初始化银行编码
	OPEN P_CURSOR FOR
	SELECT SYSTEMNAME,SYSTEMCODE FROM TD_M_BFJ_BANK
	;
ELSIF P_FUNCCODE='QUERYPNTRADETYPE' THEN--初始化系统业务交易类型表
	OPEN P_CURSOR FOR
	SELECT TRADETYPE,TRADETYPECODE FROM TF_F_BFJ_TRADETYPE
	;
ELSIF P_FUNCCODE='QUERYBANKTRADETYPE' THEN--初始化银行备付金交易类型表
	OPEN P_CURSOR FOR
	SELECT TRADENAME,TRADETYPECODE FROM TD_M_BFJ_BANKTRADETYPE WHERE TRADETYPE = P_VAR1
	;
ELSIF P_FUNCCODE='QUERYBANKOCAB' THEN--查询银行帐务
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,T.TRADECHARGE/100.0,T.LEFTMONEY/100.0) 未匹配金额,T.TRADECHARGE/100.0 交易金额,
	M.SYSTEMNAME 银行名称,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG 业务摘要,T.TRADEID
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G
	WHERE T.BANKNAME = M.SYSTEMCODE(+)
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)
	AND T.BANKNAME IN (SELECT H.BFJBANKCODE FROM TF_F_BFJ_STAFFRELATION H WHERE (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = H.DEPTID))
	AND (T.LEFTMONEY != 0 OR T.LEFTMONEY IS NULL)		--未匹配金额不为0
	AND T.AMOUNTTYPE = '0' --入金
	AND T.TRADETYPECODE = '01' --现金
	AND (T.ISNEEDMATCH = '0' OR T.ISNEEDMATCH IS NULL) --需要匹配
	ORDER BY T.FILEDATE
	;
ELSIF P_FUNCCODE='QUERYTRADECODE' THEN--查询业务帐务
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') 交易时间,DECODE(T.LEFTMONEY/100.0,NULL,T.TRADEMONEY/100.0,T.LEFTMONEY/100.0) 未匹配金额,T.TRADEMONEY/100.0 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	DECODE(T.BFJTRADETYPECODE,'01','入金','02','销户提现','03','出金','04','入金手续费','05','出金手续费','99','其他') BFJTRADETYPE,
	T.OTHERBANK,T.OTHERUSERNAME,T.OTHERBANKACCOUNT,DECODE(T.ISCASH,'0','非现金','1','现金') ISCASH,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M
	WHERE T.TRADETYPECODE = M.TRADETYPECODE
	AND T.TRADETYPECODE NOT IN ('02','03','08','10','11','12','13')		--排除代理营业厅、订单、退卡
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 <= T.TRADEMONEY/100.0)
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 >= T.TRADEMONEY/100.0)
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 = T.DEPARTID)
	AND T.BFJTRADETYPECODE IN ('01','99')			--入金、其他
	AND T.ISNEEDMATCH = '0'
	AND T.LEFTMONEY != 0		--未匹配金额为0
	ORDER BY T.TRADEDATE
	;
ELSIF P_FUNCCODE='QUERYBANKOCAB_RE' THEN--查询解款银行帐务
	OPEN P_CURSOR FOR
	SELECT DISTINCT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,0,T.LEFTMONEY/100.0) 未匹配金额,T.TRADECHARGE/100.0 交易金额,
	M.SYSTEMNAME 银行名称,T.BANKNO 银行编码,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG 业务摘要,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD A,TF_F_BFJ_BANKRELATION D,TF_B_BFJ_CHECK B,TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G
	WHERE A.TRADEID= D.SYSTEMTRADEID
	AND A.TRADEDATE >= TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS')
    AND A.TRADEDATE <= TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS')
	AND A.TRADETYPECODE NOT IN ('02','03','08','10','11','12','13')
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = A.DEPARTID)
	AND D.BANKTRADEID = T.TRADEID(+)
	AND D.BANKTRADEID = B.BANKTRADEID
	AND D.TRADEID = B.TRADEID
	AND T.BANKNAME = M.SYSTEMCODE(+)
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)
	AND T.AMOUNTTYPE = '0' --入金
	AND (T.ISNEEDMATCH = '0' OR T.ISNEEDMATCH IS NULL) --需要匹配
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 <= T.TRADECHARGE/100.0)
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 >= T.TRADECHARGE/100.0)
	ORDER BY T.FILEDATE
	;
ELSIF P_FUNCCODE='QUERYTRADECODE_RE' THEN--查询解款业务帐务
	OPEN P_CURSOR FOR
	SELECT DISTINCT T.TRADEDATE 交易时间,DECODE(T.LEFTMONEY/100.0,NULL,0,T.LEFTMONEY/100.0) 未匹配金额,T.TRADEMONEY/100.0 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	DECODE(T.BFJTRADETYPECODE,'01','入金','02','销户提现','03','出金','04','入金手续费','05','出金手续费','99','其他') BFJTRADETYPE,
	T.OTHERBANK,T.OTHERUSERNAME,T.OTHERBANKACCOUNT,DECODE(T.ISCASH,'0','非现金','1','现金') ISCASH,T.TRADEID
	FROM TF_F_BFJ_BANKRELATION D,TF_B_BFJ_CHECK B,TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M
	WHERE T.TRADEID = D.SYSTEMTRADEID
	AND D.TRADEID = B.TRADEID
	AND B.TRADECODE = '1'							--关联订单
	AND T.TRADETYPECODE = M.TRADETYPECODE
	AND T.TRADETYPECODE IN ('01','14','15')			--排除代理营业厅、订单、退卡
	AND T.TRADEDATE >= TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS')
    AND T.TRADEDATE <= TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS')
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 <= T.TRADEMONEY/100.0)
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 >= T.TRADEMONEY/100.0)
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 = T.DEPARTID)
	AND T.BFJTRADETYPECODE IN ('01','99')			--入金、其他
	ORDER BY T.TRADEDATE
	;
ELSIF P_FUNCCODE='QUERYINVALIDATE' THEN --查询该日是否入金已经匹配完成，匹配完成则不允许匹配
	OPEN P_CURSOR FOR
	SELECT COUNT(1) FROM TF_F_BFJ_TASK T 
	WHERE T.BFJDATE = P_VAR1 AND T.ISINMATCH = '1';
ELSIF P_FUNCCODE='QUERYOUTVALIDATE' THEN --查询该日是否出金已经匹配完成，匹配完成则不允许匹配
	OPEN P_CURSOR FOR
	SELECT COUNT(1) FROM TF_F_BFJ_TASK T 
	WHERE T.BFJDATE = P_VAR1 AND T.ISOUTMATCH = '1';	
ELSIF P_FUNCCODE='QUERYTRADEDATE' THEN --查询该日期是否有网点未解款
	OPEN P_CURSOR FOR
	SELECT DISTINCT M.DEPARTNAME FROM TD_M_INSIDEDEPART M,TF_F_BFJ_TRADERECORD T
	WHERE T.DEPARTID = M.DEPARTNO(+)
	AND T.LEFTMONEY != 0	--有未匹配金额
	AND T.ISNEEDMATCH = '0'	--需要匹配
	AND T.DEPARTID NOT IN ('0001','0029','0032')	--排出财务部、电商中心、轨道交通网点
	AND T.TRADEDATE >= TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS')
    AND T.TRADEDATE <= TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS');
ELSIF P_FUNCCODE='QUERYRETRADE' THEN --初始化该网点最后一笔可取消解款日期
	OPEN P_CURSOR FOR
	SELECT CONFIRMDATE FROM (
	SELECT CONFIRMDATE FROM TF_F_BFJ_STAFFCONFIRM T
	WHERE (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = T.DEPTID) ORDER BY T.CONFIRMDATE DESC)
	WHERE ROWNUM = 1;
ELSIF P_FUNCCODE='QUERYTOPINDATE' THEN--查询银行帐务-入金
	OPEN P_CURSOR FOR
	SELECT A.BFJDATE
	FROM TF_F_BFJ_TASK A LEFT JOIN TF_F_BFJ_STAFFCONFIRM B
	ON A.BFJDATE = B.CONFIRMDATE
	WHERE A.ISINMATCH = '0'
	AND B.CONFIRMDATE IS NULL ORDER BY A.BFJDATE;
ELSIF P_FUNCCODE='QUERYTOPOUTDATE' THEN--查询银行帐务-出金
	OPEN P_CURSOR FOR
	SELECT A.BFJDATE
	FROM TF_F_BFJ_TASK A LEFT JOIN TF_F_BFJ_STAFFCONFIRM B
	ON A.BFJDATE = B.CONFIRMDATE
	WHERE A.ISOUTMATCH = '0'
	AND B.CONFIRMDATE IS NULL ORDER BY A.BFJDATE;
ELSIF P_FUNCCODE='QUERYBANKOCABIN' THEN--查询银行帐务-入金
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,T.TRADECHARGE/100.0,T.LEFTMONEY/100.0) 未匹配金额,T.TRADECHARGE/100.0 交易金额,
	M.SYSTEMNAME 银行名称,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG 业务摘要,T.TRADEID
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G
	WHERE T.BANKNAME = M.SYSTEMCODE(+)
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = T.BANKNAME)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.TRADETYPECODE)
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR T.OTHERUSERNAME LIKE '%'||P_VAR3||'%')
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 <= T.TRADECHARGE/100.0)
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 >= T.TRADECHARGE/100.0)
	AND (P_VAR6 IS NULL OR P_VAR6 = '' OR T.TRADEMEG LIKE '%'||P_VAR6||'%')
	AND (T.ISNEEDMATCH = '0' OR T.ISNEEDMATCH IS NULL) --需要匹配
	AND (T.LEFTMONEY != 0 OR T.LEFTMONEY IS NULL)		--未匹配金额不为0
	AND T.AMOUNTTYPE = '0' --入金
	ORDER BY T.FILEDATE
	;
ELSIF P_FUNCCODE='QUERYTRADECODEIN' THEN--查询业务帐务-入金
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') 交易时间,T.LEFTMONEY/100.0 未匹配金额,T.TRADEMONEY/100.0 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	DECODE(T.BFJTRADETYPECODE,'01','入金','02','销户提现','03','出金','04','入金手续费','05','出金手续费','99','其他') BFJTRADETYPE,
	K.SYSTEMNAME 对方开户行,T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT,DECODE(T.ISCASH,'0','非现金','1','现金') ISCASH,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = M.TRADETYPECODE(+)
	AND T.OTHERBANK = K.SYSTEMCODE(+)
	AND T.ISNEEDMATCH = '0'		--需要匹配
	AND T.LEFTMONEY != 0		--未匹配金额不为0
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADEDATE,'YYYYMMDD') OR (P_VAR1 > to_char(T.TRADEDATE,'YYYYMMDD') AND P_VAR1 = 
	(SELECT TO_CHAR((TO_DATE(BFJDATE,'YYYYMMDD')+1),'YYYYMMDD') FROM (SELECT BFJDATE FROM TF_F_BFJ_TASK WHERE ISINMATCH ='1' ORDER BY BFJDATE DESC) WHERE ROWNUM = 1)
	))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.TRADETYPECODE)
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR T.NAME LIKE '%'||P_VAR3||'%')
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 <= T.TRADEMONEY/100.0)
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 >= T.TRADEMONEY/100.0)
	AND (P_VAR6 IS NULL OR P_VAR6 = '' OR P_VAR6 = T.DEPARTID)
	AND T.AMOUNTTYPE = '0'								--入金
	AND T.BFJTRADETYPECODE IN ('01','03','04','99')		--入金、其他
	ORDER BY 1,2
	;
ELSIF P_FUNCCODE='QUERYTRADELISTIN' THEN --入金匹配完成时查询
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,T.TRADEID 银行流水号,D.TRADEID 业务流水号,T.BANKNO 银行编码,K.SYSTEMNAME 银行名称,
	T.BANKACCOUNT 银行帐号,T.TRADEMEG 银行业务摘要,B.TRADENAME 银行业务类型,C.MONEY/100.0 匹配金额,D.NAME 业务交易对象,M.TRADETYPE 业务交易类型
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANKTRADETYPE B,TF_F_BFJ_BANKRELATION C,TF_F_BFJ_TRADERECORD D,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = B.TRADETYPECODE(+)
	AND T.BANKNAME = K.SYSTEMCODE(+)
	AND D.TRADETYPECODE = M.TRADETYPECODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS') <= D.TRADEDATE)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS') >= D.TRADEDATE)
	AND D.BFJTRADETYPECODE IN ('01','03','04','99')
	AND C.SYSTEMTRADEID = D.TRADEID
	AND C.BANKTRADEID = T.TRADEID;
ELSIF P_FUNCCODE='QUERYBANKOCABOUT' THEN--查询银行帐务-出金
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,(T.TRADECHARGE/100.0),(T.LEFTMONEY/100.0)) 未匹配金额,(T.TRADECHARGE/100.0) 交易金额,
	M.SYSTEMNAME 银行名称,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG 业务摘要,T.TRADEID
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G
	WHERE T.BANKNAME = M.SYSTEMCODE(+)
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = T.BANKNAME)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.TRADETYPECODE)
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR T.OTHERUSERNAME LIKE '%'||P_VAR3||'%')
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 <= ABS(T.TRADECHARGE/100.0))
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 >= ABS(T.TRADECHARGE/100.0))
	AND (T.ISNEEDMATCH = '0' OR T.ISNEEDMATCH IS NULL) --需要匹配
	AND (T.LEFTMONEY != 0 OR T.LEFTMONEY IS NULL)		--未匹配金额不为0
	AND T.AMOUNTTYPE = '1' --出金
	ORDER BY T.FILEDATE
	;
ELSIF P_FUNCCODE='QUERYTRADECODEOUT' THEN--查询业务帐务-出金
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') 交易时间,(T.LEFTMONEY/100.0) 未匹配金额,(T.TRADEMONEY/100.0) 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	DECODE(T.BFJTRADETYPECODE,'01','入金','02','销户提现','03','出金','04','入金手续费','05','出金手续费','99','其他') BFJTRADETYPE,
	K.SYSTEMNAME 对方开户行,T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT,DECODE(T.ISCASH,'0','非现金','1','现金') ISCASH,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = M.TRADETYPECODE(+)
	AND T.OTHERBANK = K.SYSTEMCODE(+)
	AND T.ISNEEDMATCH = '0'		--需要匹配
	AND T.LEFTMONEY != 0		--未匹配金额不为0
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADEDATE,'YYYYMMDD') OR (P_VAR1 > to_char(T.TRADEDATE,'YYYYMMDD') AND P_VAR1 = 
	(SELECT TO_CHAR((TO_DATE(BFJDATE,'YYYYMMDD')+1),'YYYYMMDD') FROM (SELECT BFJDATE FROM TF_F_BFJ_TASK WHERE ISINMATCH ='1' ORDER BY BFJDATE DESC) WHERE ROWNUM = 1)
	))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.TRADETYPECODE)
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR T.NAME LIKE '%'||P_VAR3||'%')
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 <= ABS(T.TRADEMONEY/100.0))
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 >= ABS(T.TRADEMONEY/100.0))
	AND (P_VAR6 IS NULL OR P_VAR6 = '' OR P_VAR6 = T.DEPARTID)
	AND T.BFJTRADETYPECODE IN ('02','03','05')			--出金
	ORDER BY 1,2
	;
ELSIF P_FUNCCODE='QUERYTRADELISTOUT' THEN --出金匹配完成时查询
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,T.TRADEID 银行流水号,D.TRADEID 业务流水号,T.BANKNO 银行编码,K.SYSTEMNAME 银行名称,
	T.BANKACCOUNT 银行帐号,T.TRADEMEG 银行业务摘要,B.TRADENAME 银行业务类型,C.MONEY/100.0 匹配金额,D.NAME 业务交易对象,M.TRADETYPE 业务交易类型
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANKTRADETYPE B,TF_F_BFJ_BANKRELATION C,TF_F_BFJ_TRADERECORD D,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = B.TRADETYPECODE(+)
	AND T.BANKNAME = K.SYSTEMCODE(+)
	AND D.TRADETYPECODE = M.TRADETYPECODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS') <= D.TRADEDATE)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS') >= D.TRADEDATE)
	AND D.BFJTRADETYPECODE IN ('02','03','05')
	AND C.SYSTEMTRADEID = D.TRADEID
	AND C.BANKTRADEID = T.TRADEID;
ELSIF P_FUNCCODE='QUERYDEPTTADE' THEN --网点代办业务录入查询
	OPEN P_CURSOR FOR
	SELECT T.TRADEID 业务流水号,DECODE(T.TRADETYPECODE,'01','公共自行车开通','02','吴江旅游年卡','03','苏州乐园门票','04','A卡业务','99','其他',T.TRADETYPECODE) 业务类型,
	T.TRADEMONEY/100.0 交易金额,M.DEPARTNAME 操作部门,N.STAFFNAME 更新员工,TO_CHAR(T.TRADETIME,'YYYY-MM-DD') 更新时间,
	TO_CHAR(T.TRADETIME,'YYYYMMDD') OPERATETIME,T.TRADETYPECODE,T.REMARK
	FROM TF_F_BFJ_STAFFAGENTTRADE T,TD_M_INSIDEDEPART M,TD_M_INSIDESTAFF N
	WHERE T.OPERATEDEPTNO = M.DEPARTNO(+)
	AND T.OPERATESTAFFNO = N.STAFFNO(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADETIME,'YYYYMMDD'))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.TRADETYPECODE)
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 = T.OPERATEDEPTNO)
	ORDER BY 1,6 DESC;
ELSIF P_FUNCCODE='QUERYFEE' THEN --查询手续费
	OPEN P_CURSOR FOR
	SELECT FEERULENO,SLOPE FROM TF_FEE ORDER BY SLOPE;
ELSIF P_FUNCCODE='QUERYSELSUPBALUNIT' THEN --查询代理网点
	OPEN P_CURSOR FOR
	SELECT BALUNIT,BALUNITNO FROM TF_SELSUP_BALUNIT ORDER BY BALUNITNO;
ELSIF P_FUNCCODE='QUERYSCHEME' THEN --查询网点-佣金方案信息
	OPEN P_CURSOR FOR
	SELECT T.ID,T.BALUNITNO,M.BALUNIT,T.COMSCHEMENO,K.SLOPE,T.BEGINTIME,T.ENDTIME,T.REMARK
	FROM TD_DLBALUNIT_FEESCHEME T,TF_SELSUP_BALUNIT M,TF_FEE K
	WHERE T.BALUNITNO = M.BALUNITNO(+)
	AND T.COMSCHEMENO = K.FEERULENO(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = T.BALUNITNO)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 = T.COMSCHEMENO)
	ORDER BY T.BALUNITNO;
ELSIF P_FUNCCODE='QUERYFINANCE' THEN --出入金查询
	OPEN P_CURSOR FOR
	SELECT J.FILEDATE,J.INMONEY,J.OUTMONEY,K.BANKLESS/100.0 BANKLESS,K.BUSINESSLESS/100.0 BUSINESSLESS FROM (
	SELECT FILEDATE,SUM(INMONEY) INMONEY,SUM(OUTMONEY) OUTMONEY FROM (
	(SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') FILEDATE,SUM(T.TRADEMONEY/100.0) INMONEY,0 OUTMONEY
	FROM TF_F_BFJ_TRADERECORD T
	WHERE T.AMOUNTTYPE = '0'  --入金
	AND T.LEFTMONEY = 0		--未匹配金额
	AND T.ISNEEDMATCH = '0'	--需要匹配
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS') <= T.TRADEDATE)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR TO_DATE(P_VAR2||'235959','YYYYMMDDHH24MISS') >= T.TRADEDATE)
	GROUP BY TO_CHAR(T.TRADEDATE,'YYYYMMDD')
	UNION ALL
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') FILEDATE,0 INMONEY,SUM(T.TRADEMONEY/100.0) OUTMONEY
	FROM TF_F_BFJ_TRADERECORD T
	WHERE T.AMOUNTTYPE = '1'  --出金
	AND T.LEFTMONEY = 0		--未匹配金额
	AND T.ISNEEDMATCH = '0'	--需要匹配
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS') <= T.TRADEDATE)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR TO_DATE(P_VAR2||'235959','YYYYMMDDHH24MISS') >= T.TRADEDATE)
	GROUP BY TO_CHAR(T.TRADEDATE,'YYYYMMDD')
	)) GROUP BY FILEDATE)
	J,TF_F_BFJ_TASK K
	WHERE J.FILEDATE = K.BFJDATE
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= K.BFJDATE)
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= K.BFJDATE);
ELSIF P_FUNCCODE='QUERYFINANCE_LIST' THEN --出入金查询明细
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(D.TRADEDATE,'YYYYMMDD') TRADEDATE,C.MONEY,T.TRADEID BANKTRADEID,D.TRADEID,K.SYSTEMNAME,T.BANKACCOUNT,B.TRADENAME,
	T.TRADEMEG,D.NAME,M.TRADETYPE
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANKTRADETYPE B,TF_F_BFJ_BANKRELATION C,TF_F_BFJ_TRADERECORD D,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = B.TRADETYPECODE(+)
	AND T.BANKNAME = K.SYSTEMCODE(+)
	AND D.TRADETYPECODE = M.TRADETYPECODE(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'000000','YYYYMMDDHH24MISS') <= D.TRADEDATE)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR TO_DATE(P_VAR1||'235959','YYYYMMDDHH24MISS') >= D.TRADEDATE)
	AND C.SYSTEMTRADEID = D.TRADEID(+)
	AND C.BANKTRADEID = T.TRADEID(+)
	AND D.ISNEEDMATCH = '0'
	AND D.LEFTMONEY = 0
	ORDER BY T.TRADETYPECODE,C.MONEY;
ELSIF P_FUNCCODE='QUERYBANK' THEN --银行接口查询
	OPEN P_CURSOR FOR
			SELECT SYSTEMNAME, SYSTEMCODE, STRDATE, NVL((SELECT DECODE(ISUPLOAD,'0','文件不存在', '1', 
		DECODE(FILECODE,'0','正在处理中','1','处理成功','2','处理失败-' ||FILEERRORINFO)) 
		FROM TF_B_BFJ_SYNC 
		WHERE SYNCTYPECODE = '2102' 
		AND FILETYPE = '2' 
		AND SYNCHOME = SYSTEMCODE 
		AND instr(FILEPATH, STRDATE) > 0 
		AND ROWNUM = 1), 
		'未同步') OBABSTATE, 
		NVL((SELECT DECODE(ISUPLOAD,'0','文件不存在', '1', 
		DECODE(FILECODE,'0','正在处理中','1','处理成功','2','处理失败-' ||FILEERRORINFO)) 
		FROM TF_B_BFJ_SYNC 
		WHERE SYNCTYPECODE = '2102' 
		AND FILETYPE = '3' 
		AND SYNCHOME = SYSTEMCODE 
		AND instr(FILEPATH, STRDATE) > 0 
		AND ROWNUM = 1), 
		'未同步') OCABSTATE 
		FROM TD_M_BFJ_BANK B, (SELECT TO_CHAR((to_date(P_VAR1, 'yyyy-mm-dd') + 
		rownum - 1), 
		'YYYYMMDD') STRDATE 
		FROM dual 
		CONNECT BY rownum <= 
		to_date(P_VAR2, 'yyyy-mm-dd') - 
		to_date(P_VAR1, 'yyyy-mm-dd')+1) W 
    WHERE (P_VAR3 IS NULL OR P_VAR3 = '' OR SYSTEMCODE= P_VAR3)
        AND B.ISCOOPERATIVE = '1'
		ORDER BY STRDATE, SYSTEMNAME, SYSTEMCODE;
ELSIF P_FUNCCODE='QUERYBANKACCOUNTS' THEN --银行账务查询
	OPEN P_CURSOR FOR
                SELECT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,(T.TRADECHARGE/100.0),
                (T.LEFTMONEY/100.0)) 未匹配金额,(T.TRADECHARGE/100.0) 交易金额,		
	M.SYSTEMNAME 银行名称,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,	
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG  业务摘要,T.TRADEID	
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G	
	WHERE T.BANKNAME = M.SYSTEMCODE(+)	
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)	
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.FILEDATE))	
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.FILEDATE))	
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 = T.BANKNAME)	
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR P_VAR4 = T.TRADETYPECODE)	
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR T.OTHERUSERNAME LIKE '%'||P_VAR5||'%')	
	AND (P_VAR6 IS NULL OR P_VAR6 = '' OR P_VAR6 <= ABS(T.TRADECHARGE/100.0))	
	AND (P_VAR7 IS NULL OR P_VAR7 = '' OR P_VAR7 >= ABS(T.TRADECHARGE/100.0))	
	ORDER BY T.FILEDATE
               ;
ELSIF P_FUNCCODE='QUERYBANKACCOUNTSTOBUSINESS' THEN --银行账务关联业务
	OPEN P_CURSOR FOR
	SELECT C.SYSTEMTRADEID,C.MONEY/100.0 匹配金额,C.UPDATETIME 匹配日期,T.NAME 业务交易对象,T.TRADEMONEY/100.0 业务金额,T.TRADEDATE 交易日期,
	S.STAFFNAME 匹配操作员工,D.DEPARTNAME 操作部门,M.TRADETYPE 业务交易类型,C.ORDERNO 批次号
	FROM TF_F_BFJ_BANKRELATION  C,TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M,	TD_M_INSIDESTAFF S,TD_M_INSIDEDEPART D
	WHERE	 T.TRADETYPECODE = M.TRADETYPECODE(+)
	AND C.SYSTEMTRADEID = T.TRADEID
	AND C.UPDATESTAFFNO=S.STAFFNO(+)
	AND S.DEPARTNO=D.DEPARTNO(+)
	AND ( P_VAR1 = '' OR P_VAR1 = C.BANKTRADEID )
	;
ELSIF P_FUNCCODE='QUERYAllBANKTRADETYPE' THEN--初始化全部银行备付金交易类型表
	OPEN P_CURSOR FOR
	SELECT TRADENAME,TRADETYPECODE FROM TD_M_BFJ_BANKTRADETYPE
	;
ELSIF P_FUNCCODE='QUERYTRADEACCOUNTS' THEN --业务数据查询
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') 交易时间,T.LEFTMONEY/100.0 未匹配金额,T.TRADEMONEY/100.0 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	K.SYSTEMNAME 对方开户行,T.OTHERUSERNAME 对方开户名,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = M.TRADETYPECODE(+)
	AND T.OTHERBANK = K.SYSTEMCODE(+)
	AND T.ISNEEDMATCH = '0'		--需要匹配
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND (P_VAR3 IS NULL OR P_VAR3 = '' OR P_VAR3 = T.TRADETYPECODE)
	AND (P_VAR4 IS NULL OR P_VAR4 = '' OR T.NAME LIKE '%'||P_VAR4||'%')
	AND (P_VAR5 IS NULL OR P_VAR5 = '' OR P_VAR5 <= T.TRADEMONEY/100.0)
	AND (P_VAR6 IS NULL OR P_VAR6 = '' OR P_VAR6 >= T.TRADEMONEY/100.0)
	ORDER BY 1,2
	;
ELSIF P_FUNCCODE='QUERYTRADEACCOUNTSTOBUSINESS' THEN --	业务帐务关联银行
	OPEN P_CURSOR FOR
	SELECT C.BANKTRADEID,C.MONEY/100.0 匹配金额,C.UPDATETIME 匹配日期,M.SYSTEMNAME 银行名称,T.TRADECHARGE/100.0 银行金额,T.FILEDATE 交易日期,
	S.STAFFNAME 匹配操作员工,D.DEPARTNAME 操作部门,T.OTHERBANK 对方开户行,C.ORDERNO 批次号
	FROM TF_F_BFJ_BANKRELATION  C,TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,	TD_M_INSIDESTAFF S,TD_M_INSIDEDEPART D
	WHERE	 T.BANKNAME = M.SYSTEMCODE(+)
	AND C.BANKTRADEID = T.TRADEID
	AND C.UPDATESTAFFNO=S.STAFFNO(+)
	AND S.DEPARTNO=D.DEPARTNO(+)
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 = C.SYSTEMTRADEID)
	ORDER BY 2 DESC
	;
ELSIF P_FUNCCODE='QUERYUNBANKLESS' THEN --不匹配银行业务查询
	OPEN P_CURSOR FOR
	SELECT T.FILEDATE 文件日期,DECODE(T.LEFTMONEY/100.0,NULL,(T.TRADECHARGE/100.0),(T.LEFTMONEY/100.0)) 未匹配金额,(T.TRADECHARGE/100.0) 交易金额,
	M.SYSTEMNAME 银行名称,G.TRADENAME 业务类型,T.OTHERBANK 对方开户行,
	T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT 对方银行帐号,T.TRADEMEG 业务摘要,T.TRADEID
	FROM TF_F_BFJ_OCAB T,TD_M_BFJ_BANK M,TD_M_BFJ_BANKTRADETYPE G
	WHERE T.BANKNAME = M.SYSTEMCODE(+)
	AND T.TRADETYPECODE = G.TRADETYPECODE(+)
	AND ISNEEDMATCH = '1'		--不需要匹配
	AND T.RSRV1 IS NULL--不需要隐藏信息
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.FILEDATE))	
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.FILEDATE))
	AND T.TRADEID NOT IN (SELECT POSBANKTRADEID FROM TF_F_BFJ_UNBANKRELATION)
	AND T.TRADEID NOT IN (SELECT NETABANKTRADEID FROM TF_F_BFJ_UNBANKRELATION)
	ORDER BY 1;
ELSIF P_FUNCCODE='QUERYUNTRADELESS' THEN --不匹配业务取消
	OPEN P_CURSOR FOR
	SELECT TO_CHAR(T.TRADEDATE,'YYYYMMDD') 交易时间,T.LEFTMONEY/100.0 未匹配金额,T.TRADEMONEY/100.0 交易金额,T.NAME 交易对象,M.TRADETYPE 交易类型,
	DECODE(T.BFJTRADETYPECODE,'01','入金','02','销户提现','03','出金','04','入金手续费','05','出金手续费','99','其他') BFJTRADETYPE,
	K.SYSTEMNAME 对方开户行,T.OTHERUSERNAME 对方开户名,T.OTHERBANKACCOUNT,DECODE(T.ISCASH,'0','非现金','1','现金') ISCASH,T.TRADEID
	FROM TF_F_BFJ_TRADERECORD T,TF_F_BFJ_TRADETYPE M,TD_M_BFJ_BANK K
	WHERE T.TRADETYPECODE = M.TRADETYPECODE(+)
	AND T.OTHERBANK = K.SYSTEMCODE(+)
	AND T.ISNEEDMATCH = '1'		--不需要匹配
	AND T.RSRV1 IS NULL--不需要隐藏信息
	AND (P_VAR1 IS NULL OR P_VAR1 = '' OR P_VAR1 <= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND (P_VAR2 IS NULL OR P_VAR2 = '' OR P_VAR2 >= to_char(T.TRADEDATE,'YYYYMMDD'))
	AND T.TRADEID NOT IN (SELECT POSBANKTRADEID FROM TF_F_BFJ_UNBANKRELATION)
	AND T.TRADEID NOT IN (SELECT NETABANKTRADEID FROM TF_F_BFJ_UNBANKRELATION)
	ORDER BY 1,2
	;
ELSIF P_FUNCCODE='QUERYREPORT' THEN --REPORT
	V_I := 1;
	v_sql := 'SELECT NVL(C1,0)';
	WHILE V_I < P_VAR4
	LOOP
		V_I := V_I + 1;
		v_sql :=v_sql||',NVL(C'||V_I||',0)';
	END LOOP;	
	v_sql := v_sql|| ' FROM ' || P_VAR1 ||' WHERE BFJDATE BETWEEN '''|| SUBSTR(P_VAR2,1,6)||'01''' || ' AND ''' || P_VAR2 ||'''';
	IF P_VAR3 IS NOT NULL THEN
	v_sql := v_sql|| ' AND BANKCODE = '''|| P_VAR3 ||'''';
	END IF;
	v_sql := v_sql|| ' ORDER BY BFJDATE ';
	OPEN P_CURSOR FOR v_sql;
ELSIF P_FUNCCODE='QUERYREPORT_2' THEN --REPORT
	V_I := 4;
	v_sql := 'SELECT NVL(C4,0)';
	WHILE V_I < P_VAR4
	LOOP
		V_I := V_I + 1;
		v_sql :=v_sql||',NVL(C'||V_I||',0)';
	END LOOP;	
	v_sql := v_sql|| ' FROM ' || P_VAR1 ||' WHERE BFJDATE BETWEEN '''|| SUBSTR(P_VAR2,1,6)||'01''' || ' AND ''' || P_VAR2 ||'''';
	IF P_VAR3 IS NOT NULL THEN
	v_sql := v_sql|| ' AND BANKCODE = '''|| P_VAR3 ||'''';
	END IF;
	v_sql := v_sql|| ' ORDER BY BFJDATE ';
	OPEN P_CURSOR FOR v_sql;	
ELSIF P_FUNCCODE='QUERYSPE'	THEN --REPORT
	V_I := 1;
	V_N := 1;
	v_sql := 'SELECT NVL(C2,0)';
	WHILE V_I < P_VAR4
	LOOP
		IF V_I < 6 THEN
			V_N := 2 + V_I*3;
		ELSE
			V_N := 1 + V_I*3;
		END IF;
		V_I := V_I + 1;
		v_sql :=v_sql||'+NVL(C'||V_N||',0)';
	END LOOP;	
	v_sql := v_sql|| ' FROM ' || P_VAR1 ||' WHERE BFJDATE = '''|| P_VAR2 ||'''';
	OPEN P_CURSOR FOR v_sql;
ELSIF P_FUNCCODE='QUERYSPE_9'	THEN --REPORT
	v_sql := 'SELECT SUM(NVL('||P_VAR1||',0)) FROM TF_F_BFJ_REPORT9 WHERE BFJDATE = '''||P_VAR2||'''';
	OPEN P_CURSOR FOR v_sql;
ELSIF P_FUNCCODE='QUERYREPORTSUM'	THEN --REPORT
	V_I := 1;
	v_sql := 'SELECT SUM(NVL(C1,0))';
	WHILE V_I < P_VAR4
	LOOP
		V_I := V_I + 1;
		v_sql :=v_sql||',SUM(NVL(C'||V_I||',0))';
	END LOOP;	
	v_sql := v_sql|| ' FROM ' || P_VAR1 ||' WHERE BFJDATE BETWEEN '''|| SUBSTR(P_VAR2,1,6)||'01''' || ' AND ''' || P_VAR2 ||'''';
	
	v_sql := v_sql|| ' GROUP BY BFJDATE';
	OPEN P_CURSOR FOR v_sql;	
ELSIF P_FUNCCODE='QUERYREPORT_1_H' THEN --REPORT1_H列
	v_sql :='SELECT SUM(NVL(C10,0)) FROM TF_F_BFJ_REPORT1 WHERE BFJDATE BETWEEN '''|| SUBSTR(P_VAR2,1,6)||'01''' || ' AND ''' || P_VAR2 ||'''';
	v_sql := v_sql|| ' GROUP BY BFJDATE';
	OPEN P_CURSOR FOR v_sql;
ELSIF P_FUNCCODE='QUERYREPORT_12_19' THEN --REPORT12-19行
	V_I := 1;
	V_SQL := 'SELECT SUM(DECODE(T.BFJDATE,'''||SUBSTR(P_VAR2,1,6)||'01'||''',NVL(T.C19,0),0)) AS "' ||SUBSTR(P_VAR2,1,6)|| '01"';
	WHILE V_I < SUBSTR(P_VAR2,-2)
	LOOP
		V_I := V_I + 1;
		IF LENGTHB(V_I) = 1 THEN
			V_N :=  '0' ||V_I;
		ELSE
			V_N := V_I;
		END IF;
		V_SQL := V_SQL || ',' || 'SUM(DECODE(T.BFJDATE,''' || SUBSTR(P_VAR2,1,6) || V_N ||''',NVL(T.C19,0),0)) AS "' || SUBSTR(P_VAR2,1,6) || V_N||'"';
	END LOOP;
	V_SQL := V_SQL || 'FROM TF_F_BFJ_REPORT12 T WHERE BFJDATE BETWEEN '''|| SUBSTR(P_VAR2,1,6)||'01''' || ' AND ''' || P_VAR2 ||'''';
	OPEN P_CURSOR FOR V_SQL;
ELSIF P_FUNCCODE='QUERYREPORT3'	THEN --REPORT3
	V_I := 1;
	V_SQL := 'SELECT SUM(DECODE(T.BFJDATE,'''||SUBSTR(P_VAR2,1,6)||'01'||''',NVL(T.C4,0),0)) AS "' ||SUBSTR(P_VAR2,1,6)|| '01"';
	WHILE V_I < SUBSTR(P_VAR2,-2)
	LOOP
		V_I := V_I + 1;
		IF LENGTHB(V_I) = 1 THEN
			V_N :=  '0' ||V_I;
		ELSE
			V_N := V_I;
		END IF;
		V_SQL := V_SQL || ',' || 'SUM(DECODE(T.BFJDATE,''' || SUBSTR(P_VAR2,1,6) || V_N ||''',NVL(T.C4,0),0)) AS "' || SUBSTR(P_VAR2,1,6) || V_N||'"';
	END LOOP;
	V_SQL := V_SQL || 'FROM TF_F_BFJ_REPORT3 T WHERE T.BANKCODE NOT IN (''JSYH'',''NJYH'') GROUP BY T.C1 ORDER BY T.C1';
	OPEN P_CURSOR FOR V_SQL;
ELSIF P_FUNCCODE='QUERYREPORT6'	THEN --REPORT6
	
	DELETE FROM TMP_COMMON_BFJ;
	--外层循环控制单个SQL的个数
	V_1 := 1;
	WHILE V_1 < P_VAR4 + 1
	LOOP
		
		V_I := 1;
		V_SQL := 'INSERT INTO TMP_COMMON_BFJ(F0';
		WHILE V_I < SUBSTR(P_VAR2,-2)
		LOOP
			V_SQL := V_SQL || ',F' || V_I;
			V_I := V_I + 1;
		END LOOP;
		V_SQL := V_SQL || ') ';
		
		--里层循环控制单个SQL的日期
		V_I := 1;
		V_SQL := V_SQL || 'SELECT SUM(DECODE(T.BFJDATE,'''||SUBSTR(P_VAR2,1,6)||'01'||''',NVL(T.C'||V_1||',0),0)) AS "' ||SUBSTR(P_VAR2,1,6)|| '01"';
		WHILE V_I < SUBSTR(P_VAR2,-2)
		LOOP
			V_I := V_I + 1;
			IF LENGTHB(V_I) = 1 THEN
				V_N :=  '0' ||V_I;
			ELSE
				V_N := V_I;
			END IF;
			V_SQL := V_SQL || ',' || 'SUM(DECODE(T.BFJDATE,''' || SUBSTR(P_VAR2,1,6) || V_N ||''',NVL(T.C'||V_1||',0),0)) AS "' || SUBSTR(P_VAR2,1,6) || V_N||'"';
		END LOOP;
		V_SQL := V_SQL || 'FROM '|| P_VAR1 ||' T WHERE T.BANKCODE = '''|| P_VAR3 ||'''';
		
		EXECUTE IMMEDIATE V_SQL;
		
		V_1 := V_1 + 1;
	END LOOP;
	
	--查询结果
	V_I := 1;
	V_SQL := 'SELECT NVL(TO_NUMBER(F0),0)';
	WHILE V_I < SUBSTR(P_VAR2,-2)
	LOOP
		V_SQL := V_SQL || ',NVL(TO_NUMBER(F' || V_I||'),0)';
		V_I := V_I + 1;
	END LOOP;
	V_SQL := V_SQL || ' FROM TMP_COMMON_BFJ';
	OPEN P_CURSOR FOR V_SQL;
ELSIF P_FUNCCODE='QUERYREPORT9' THEN --REPORT10_COUNT
	
	DELETE FROM TMP_COMMON_BFJ;
	--外层循环控制单个SQL的个数
	V_1 := 1;
	WHILE V_1 < P_VAR4 + 1
	LOOP
		
		V_I := 1;
		V_SQL := 'INSERT INTO TMP_COMMON_BFJ(F0';
		WHILE V_I < SUBSTR(P_VAR2,-2)
		LOOP
			V_SQL := V_SQL || ',F' || V_I;
			V_I := V_I + 1;
		END LOOP;
		V_SQL := V_SQL || ') ';
		
		--里层循环控制单个SQL的日期
		V_I := 1;
		V_SQL := V_SQL || 'SELECT SUM(DECODE(T.BFJDATE,'''||SUBSTR(P_VAR2,1,6)||'01'||''',NVL(T.C'||V_1||',0),0)) AS "' ||SUBSTR(P_VAR2,1,6)|| '01"';
		WHILE V_I < SUBSTR(P_VAR2,-2)
		LOOP
			V_I := V_I + 1;
			IF LENGTHB(V_I) = 1 THEN
				V_N :=  '0' ||V_I;
			ELSE
				V_N := V_I;
			END IF;
			V_SQL := V_SQL || ',' || 'SUM(DECODE(T.BFJDATE,''' || SUBSTR(P_VAR2,1,6) || V_N ||''',NVL(T.C'||V_1||',0),0)) AS "' || SUBSTR(P_VAR2,1,6) || V_N||'"';
		END LOOP;
		V_SQL := V_SQL || 'FROM (SELECT F.BFJDATE,SUM(F.C1) C1,SUM(F.C2) C2,SUM(F.C3) C3,SUM(F.C4) C4 
		FROM TF_F_BFJ_REPORT9 F GROUP BY F.BFJDATE) T ';
		
		EXECUTE IMMEDIATE V_SQL;
		
		V_1 := V_1 + 1;
	END LOOP;
	
	--查询结果
	V_I := 1;
	V_SQL := 'SELECT TO_NUMBER(F0)';
	WHILE V_I < SUBSTR(P_VAR2,-2)
	LOOP
		V_SQL := V_SQL || ',TO_NUMBER(F' || V_I||')';
		V_I := V_I + 1;
	END LOOP;
	V_SQL := V_SQL || ' FROM TMP_COMMON_BFJ';
	OPEN P_CURSOR FOR V_SQL;
ELSIF P_FUNCCODE = 'QUERYSEP9_NEW' THEN
	OPEN P_CURSOR FOR 
	SELECT SUM(F.C1) C1,SUM(F.C2) C2,SUM(F.C3) C3,SUM(F.C4) C4 FROM TF_F_BFJ_REPORT9 f WHERE BFJDATE BETWEEN SUBSTR(P_VAR2,1,6)||'01' AND P_VAR2
	GROUP BY F.BFJDATE;
END IF;


END;
/

SHOW ERRORS