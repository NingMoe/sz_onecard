/*
create time:2014/8/8
creator:dongx
content:生成备付金每日系统账单
update: 20140915 业务收入需要区分为押金、备付金、自有资金
update: 20140924 网店账单排除张家港市民卡售卡、吴江市民卡售卡、市民卡A卡补卡、月票卡升高龄卡、旅游卡回收、换卡退押金
update: 20140925 出租车转账不计算明细，汇总为三个银行 
update: 20140926 网点排除订单数据算法变更
update: 20140928 出租车中心网店不计算到营业厅日报中,旅游卡回收手续费体现在营业厅日报中
update: 20140929 旅游卡单独计算，出租车分为上午下午两笔入账 
update: 20140930 部分代理营业厅也计算至网点日报中
update: 20141008 增加司机卡消费补录信息
update: 20141014 修复代理网点及商户转账BUG,增加退充值转账
update：20141020 商户转账增加不转账信息
update: 20141021 删除张家港招行网点的自由资金，增加公交回收月报、江阴账单
update：20141031 商户转账计算佣金，修复代理营业厅不计算充值卡BUG
update：20141106 电商、轨交网点不是现金解款；可的和全名付退充值需要计算到入金中
update: 20141126 增加团购业务，修改商户转账查询SQL
update: 20141127 网点转账改为每日汇总
update: 20141202 网点解款去掉园林相关业务，网点转账算法调整
*/

CREATE OR REPLACE PROCEDURE SP_BFJ_GenerateSysTrade
(
	p_tradeDate	char,    		-- 日期 格式YYYYMMDD 
	p_currOper	char,           -- 操作员工
	p_currDept	char,		    -- 操作部门
    p_retCode    out char,   	-- Return Code
    p_retMsg     out varchar2   -- Return Message
)
as
    v_now            date := sysdate;  --当前时间
	v_tradeID	     char(16);		   --序列 
	v_tradeMoney     int; 
	v_ex             exception; 
BEGIN 
	-- 1)入金插入系统业务账单表
	-- 1.1)网点账单入系统业务账单表（不包含退卡、退卡返销、销户、充值卡充值 、订单和代理营业厅、 换乘奖励充值、 张家港市民卡售卡、 
	--      吴江市民卡售卡、 市民卡A卡补卡 、 月票卡升高龄 、旅游卡回收）
	BEGIN 
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY,OTHERBANK,ACCOUNT,
	  BFJTRADETYPECODE, ISCASH, DEPARTID, USEDMONEY, LEFTMONEY, ISNEEDMATCH)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), DEPARTNAME, '0', FUN_GETBFJTRADETYPE(TRADETYPECODE,'01'), SUM(MONEY),B.SYSTEMCODE,B.ACCOUNT,
			   '01', '1', OPERATEDEPARTID, 0, SUM(MONEY), '0'
		FROM (SELECT D.DEPARTNAME,  (B.CARDSERVFEE  +  B.CARDDEPOSITFEE  +
									  B.SUPPLYMONEY  + B.TRADEPROCFEE  +
									  B.FUNCFEE  +  B.OTHERFEE)  MONEY, A.OPERATEDEPARTID,A.TRADETYPECODE 
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND A.TRADETYPECODE NOT IN ('05', 'A5', '06', '14', '8Q' ,'8L', '8Z', '76', '7K', '7H', '7R', 'K1', '7I',
											'3H','B3','A0','10') --不包含退卡、退卡返销、销户、充值卡充值 、专有账户批量充值、 换乘奖励充值 等                                                                                                                                                                        
					 AND A.TRADEID NOT IN (SELECT  T1.TRADEID
									FROM TF_B_TRADE T1 INNER JOIN TF_B_TRADEFEE B1
									ON T1.TRADEID = B1.TRADEID WHERE T1.TRADETYPECODE = '03'
									AND A.CARDNO NOT LIKE '215018%' 
									AND (B1.CARDSERVFEE+B1.CARDDEPOSITFEE+B1.SUPPLYMONEY+B1.TRADEPROCFEE+B1.FUNCFEE+B1.OTHERFEE) < 0) --换卡退还押金
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录  
					 AND (A.OPERATEDEPARTID NOT IN
								 (SELECT DEPARTNO FROM TD_DEPTBAL_RELATION WHERE  DBALUNITNO NOT IN ('DL000003', 'DL000005', 'DL000006') GROUP BY DEPARTNO)
						  ) --排除代理营业厅  但包括DL000003 DL000005和 DL000006结算单元对应的网店
					 AND A.OPERATESTAFFNO NOT IN ('160000','010300','030000') -- 张家港、吴江、后台账户
					 AND A.OPERATEDEPARTID NOT IN ('0015','0102') --出租车中心
					 AND A.TRADEID NOT IN (SELECT TRADEID FROM TF_F_GROUPBUY_TRADE WHERE CANCELCODE = '0')  --排除团购业务
					 UNION ALL  --旅游卡回收手续费
					 SELECT D.DEPARTNAME,  TRADEPROCFEE  MONEY, A.OPERATEDEPARTID, 'M2'      
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND A.TRADETYPECODE = '7K'
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录  
					 AND A.TRADEID NOT IN (SELECT TRADEID FROM TF_F_GROUPBUY_TRADE WHERE CANCELCODE = '0')  --排除团购业务
					 UNION ALL --旅游卡售卡押金
					 SELECT D.DEPARTNAME,  B.CARDDEPOSITFEE  MONEY, A.OPERATEDEPARTID, 'M3'      
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND A.TRADETYPECODE IN ('7H', '7R', 'K1', '7I')
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录
					AND A.TRADEID NOT IN (SELECT TRADEID FROM TF_F_GROUPBUY_TRADE WHERE CANCELCODE = '0')  --排除团购业务
					 UNION ALL --旅游卡售卡自有资金
					 SELECT D.DEPARTNAME, (B.CARDSERVFEE + B.TRADEPROCFEE  +
									  B.FUNCFEE  +  B.OTHERFEE)  MONEY, A.OPERATEDEPARTID, 'M2'      
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND A.TRADETYPECODE IN ('7H', '7R', 'K1', '7I')
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录 
					 AND  A.TRADEID NOT IN (SELECT TRADEID FROM TF_F_GROUPBUY_TRADE WHERE CANCELCODE = '0') --排除团购业务
					 UNION ALL --旅游卡售卡备付金
					 SELECT D.DEPARTNAME,  B.SUPPLYMONEY  MONEY, A.OPERATEDEPARTID, 'M1'      
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND A.TRADETYPECODE IN ('7H', '7R', 'K1', '7I')
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录  
					 AND  A.TRADEID NOT IN (SELECT TRADEID FROM TF_F_GROUPBUY_TRADE WHERE CANCELCODE = '0') --排除团购业务
					 UNION ALL  --  网点代办业务
					 SELECT D.DEPARTNAME,  TRADEMONEY  MONEY, A.OPERATEDEPTNO,'M2'
					 FROM TF_F_BFJ_STAFFAGENTTRADE A
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPTNO
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					UNION ALL
					--充值卡
					SELECT C.DEPARTNAME, A.MONEY, C.DEPARTNO, 'M1'
					FROM TF_XFC_SELL A, TD_M_INSIDESTAFF B, TD_M_INSIDEDEPART C
					WHERE A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
					AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss') 
					AND A.STAFFNO = B.STAFFNO
					AND B.DEPARTNO = C.DEPARTNO
					AND A.TRADETYPECODE = '80'
					AND A.CANCELTAG = '0' 
					AND (C.DEPARTNO NOT IN
								 (SELECT DEPARTNO FROM TD_DEPTBAL_RELATION WHERE  DBALUNITNO NOT IN ('DL000003', 'DL000005', 'DL000006') GROUP BY DEPARTNO)
						  ) --排除代理营业厅  但包括DL000003 DL000005和 DL000006结算单元对应的网店
					UNION ALL
					SELECT C.DEPARTNAME, A.TOTALMONEY, C.DEPARTNO, 'M1'
					FROM TF_XFC_BATCHSELL A, TD_M_INSIDESTAFF B, TD_M_INSIDEDEPART C
					WHERE A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
					AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss')
					AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录  
					AND A.STAFFNO = B.STAFFNO
					AND B.DEPARTNO = C.DEPARTNO
					AND (RSRV1 IS NULL OR RSRV1 <> '1') --去除返销的
					UNION ALL
					SELECT D.DEPARTNAME, B.OTHERFEE, D.DEPARTNO, 'M2'
					FROM TF_B_READER A
					INNER JOIN TF_B_TRADEFEE B ON A.TRADEID = B.TRADEID
					INNER JOIN TD_M_INSIDESTAFF C ON A.OPERATESTAFFNO = C.STAFFNO
					INNER JOIN TD_M_INSIDEDEPART D ON D.DEPARTNO = C.DEPARTNO
					WHERE A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
					AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss')
					AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录  
					AND A.CANCELTAG = '0'							
				) T 
		LEFT JOIN (SELECT MAX(BFJBANKCODE) BFJBANKCODE,DEPTID FROM TF_F_BFJ_STAFFRELATION GROUP BY DEPTID)  DB ON DB.DEPTID = T.OPERATEDEPARTID
		LEFT JOIN TD_M_BFJ_BANK B ON DB.BFJBANKCODE = B.SYSTEMCODE
		GROUP BY DEPARTNAME, OPERATEDEPARTID,B.SYSTEMCODE,B.ACCOUNT,FUN_GETBFJTRADETYPE(TRADETYPECODE,'01');
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001001';
			p_retMsg  := '网点账单入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;				 
	END; 
	
	--减去不关联的订单相关金额    
	BEGIN
		FOR v_cur IN (
			SELECT (SUM(O.CASHGIFTMONEY) + SUM(nvl(SZT.SZTBFJ,0))) BFJ, SUM(nvl(SZT.SZTZY,0)) ZYZJ, OPERATEDEPARTNO
			FROM TF_F_ORDERFORM O 
			INNER JOIN TF_F_ORDERTRADE T ON O.ORDERNO = T.ORDERNO
			LEFT JOIN (SELECT SUM(TOTALCHARGEMONEY) SZTBFJ,SUM(TOTALMONEY) - SUM(TOTALCHARGEMONEY) SZTZY,ORDERNO FROM TF_F_SZTCARDORDER GROUP BY ORDERNO) SZT
			ON SZT.ORDERNO = O.ORDERNO
			WHERE T.TRADECODE = '08'
			AND T.CANCELTAG = '0' 
			AND T.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
			AND T.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss')
			GROUP BY OPERATEDEPARTNO
		)
		LOOP
			--更新备付金
			BEGIN
				UPDATE TF_F_BFJ_TRADERECORD SET TRADEMONEY = TRADEMONEY - v_cur.BFJ, LEFTMONEY = LEFTMONEY - v_cur.BFJ
				WHERE DEPARTID = v_cur.OPERATEDEPARTNO AND TRADETYPECODE = '01' AND TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd');
				EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001020';
				p_retMsg  := ' 业务账单表更新备付金失败' || SQLERRM;
				ROLLBACK; RETURN;	
			END;
			
			--更新自有资金
			BEGIN
				UPDATE TF_F_BFJ_TRADERECORD SET TRADEMONEY = TRADEMONEY - v_cur.ZYZJ, LEFTMONEY = LEFTMONEY - v_cur.ZYZJ
				WHERE DEPARTID = v_cur.OPERATEDEPARTNO AND TRADETYPECODE = '14' AND TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd');
				EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001021';
				p_retMsg  := ' 业务账单表更新备付金失败' || SQLERRM;
				ROLLBACK; RETURN;	
			END;
		END LOOP;
	END;
	
	--减去制卡关联的订单中的充值金额
	BEGIN
		FOR v_cur IN (
			SELECT NVL(SUM(SZTBFJ),0) BFJ, OPERATEDEPARTNO
			FROM (
			SELECT O.ORDERNO,OPERATEDEPARTNO
			FROM TF_F_ORDERFORM O 
			INNER JOIN TF_F_ORDERTRADE T ON O.ORDERNO = T.ORDERNO 
			WHERE T.TRADECODE = '07'
			AND T.CANCELTAG = '0' 
			AND T.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
			AND T.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss')
			GROUP BY O.ORDERNO,OPERATEDEPARTNO
			) S
			LEFT JOIN (SELECT SUM(TOTALCHARGEMONEY) SZTBFJ ,ORDERNO FROM TF_F_SZTCARDORDER GROUP BY ORDERNO) SZT
			ON S.ORDERNO = SZT.ORDERNO
			GROUP BY OPERATEDEPARTNO 
		)
		LOOP
			--更新备付金
			BEGIN
				UPDATE TF_F_BFJ_TRADERECORD SET TRADEMONEY = TRADEMONEY - v_cur.BFJ, LEFTMONEY = LEFTMONEY - v_cur.BFJ
				WHERE DEPARTID = v_cur.OPERATEDEPARTNO AND TRADETYPECODE = '01' AND TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd');
				EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001022';
				p_retMsg  := ' 业务账单表更新备付金失败' || SQLERRM;
				ROLLBACK; RETURN;	
			END; 
		END LOOP;
	END;
	
	--删除张家港招行网点、电商的自由资金
	BEGIN
		DELETE TF_F_BFJ_TRADERECORD WHERE TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd') AND DEPARTID IN('1603', '0029') AND TRADETYPECODE = '14';
		EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001030';
				p_retMsg  := '删除张家港招行网点的自由资金失败' || SQLERRM;
				ROLLBACK; RETURN;	 
	END;
	
	--删除电商中心押金
	BEGIN
		DELETE TF_F_BFJ_TRADERECORD WHERE TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd') AND DEPARTID ='0029' AND TRADETYPECODE = '15';
		EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001030';
				p_retMsg  := '删除电商的押金失败' || SQLERRM;
				ROLLBACK; RETURN;	 
	END;
	
	--电商和轨交更新为非现金
	BEGIN
		UPDATE TF_F_BFJ_TRADERECORD SET ISCASH = '0'  WHERE TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd') 
		AND DEPARTID IN('0032', '0029') AND TRADETYPECODE = '01';
		EXCEPTION WHEN OTHERS THEN
				p_retCode := 'SBFJ001031';
				p_retMsg  := '电商和轨交更新为非现金更新失败' || SQLERRM;
				ROLLBACK; RETURN;	 
	END;
	
	--1.2）代理营业厅预付款入系统业务账单表 
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE,
	    OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, DEPARTID, USEDMONEY, LEFTMONEY, ISNEEDMATCH,
	    ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), T.DBALUNIT, '0', FUN_GETBFJTRADETYPE(TRADETYPECODE,'02'), SUM(MONEY), '01',
	    T.LINKMAN, T.BANKACCNO, '0', DEPARTNO, 0, SUM(MONEY), '0',
		BB.ACCOUNT 
		FROM (SELECT DB.DBALUNIT,  (B.CARDSERVFEE  +  B.CARDDEPOSITFEE  +
									  B.SUPPLYMONEY  + B.TRADEPROCFEE  +
									  B.FUNCFEE  +  B.OTHERFEE)  MONEY, A.OPERATEDEPARTID,
					 DB.FINBANKCODE,DB.BANKACCNO,LINKMAN,A.TRADETYPECODE,D.DEPARTNO
					 FROM TF_B_TRADE A
					 INNER JOIN TF_B_TRADEFEE B
					 ON A.TRADEID = B.TRADEID
					 INNER JOIN TD_M_TRADETYPE C
					 ON A.TRADETYPECODE = C.TRADETYPECODE
					 INNER JOIN TD_M_INSIDEDEPART D
					 ON D.DEPARTNO = A.OPERATEDEPARTID 
					 INNER JOIN TD_DEPTBAL_RELATION R 
					 ON R.DEPARTNO  = A.OPERATEDEPARTID AND R.USETAG = '1' 
					 INNER JOIN TF_DEPT_BALUNIT DB
					 ON DB.DBALUNITNO = R.DBALUNITNO AND DB.USETAG = '1' 
					 WHERE A.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
					 AND R.DBALUNITNO NOT IN ('DL000003', 'DL000005', 'DL000006')
					 AND A.TRADETYPECODE NOT IN ('05', 'A5', '06', '8L', '14') --不包含退卡、退卡返销、销户、专有账户批量充值 、充值卡充值
					 AND A.TRADEID NOT IN
								 (SELECT TRADEID
									FROM TF_F_ORDERTRADE
									WHERE OPERATETIME >=
												TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
									AND OPERATETIME <=
												TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')) --排除订单相关记录
					UNION ALL
					SELECT DB.DBALUNIT, A.MONEY, C.DEPARTNO,
					 DB.FINBANKCODE,DB.BANKACCNO,LINKMAN,'M1',C.DEPARTNO 
					FROM TF_XFC_SELL A
					INNER JOIN TD_M_INSIDESTAFF B ON A.STAFFNO = B.STAFFNO
					INNER JOIN TD_M_INSIDEDEPART C ON B.DEPARTNO = C.DEPARTNO
					INNER JOIN TD_DEPTBAL_RELATION R 
					ON R.DEPARTNO  = C.DEPARTNO AND R.USETAG = '1' 
					INNER JOIN TF_DEPT_BALUNIT DB
					ON DB.DBALUNITNO = R.DBALUNITNO AND DB.USETAG = '1' 
					WHERE A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'yyyymmddhh24miss')
					AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'yyyymmddhh24miss')  
					AND A.TRADETYPECODE = '80'
					AND A.CANCELTAG = '0'  
				) T  
		INNER JOIN TD_M_BANK B ON B.BANKCODE = T.FINBANKCODE
		LEFT  JOIN TD_M_BFJ_BANK BB ON B.BFJBANKCODE = BB.SYSTEMCODE
		GROUP BY T.DBALUNIT, T.LINKMAN, T.BANKACCNO, BB.ACCOUNT,FUN_GETBFJTRADETYPE(TRADETYPECODE,'02'),DEPARTNO;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001201';
			p_retMsg  := '代理营业厅预付款入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;
	END; 
	 
	--1.3） 订单数据入系统业务账单表
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, SYSTRADEID, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE,
	   ISCASH, STAFFNO, DEPARTID, USEDMONEY, LEFTMONEY, ISNEEDMATCH)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), O.ORDERNO, DECODE(O.ORDERTYPE,'1',O.GROUPNAME,'2',O.NAME), '0', '03', O.TOTALMONEY, '01',
	   '0', O.UPDATESTAFFNO OPERATESTAFFNO, O.UPDATEDEPARTNO OPERATEDEPARTNO, 0, O.TOTALMONEY, '0'
		FROM TF_F_ORDERFORM O 
		WHERE O.ORDERSTATE = '08'
		AND O.USETAG = '1'
		AND O.UPDATETIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
		AND O.UPDATETIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') ;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001003';
			p_retMsg  := '订单数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;			
	END;
	 
	--1.4) 商户代理充值入系统业务账单表 
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE,
	   OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT  FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), DBALUNIT, DBALUNITNO, '0', '04', SUM(充值) - SUM(冲正) + SUM(回收), '01',
	  BFJBANKCODE, DBALUNIT, BANKACCNO, '0', 0, SUM(充值) - SUM(冲正) + SUM(回收), '0', BB.ACCOUNT 
		FROM (SELECT B.DBALUNIT, SUM(A.TRADEMONEY) 充值, 0 冲正, 0 回收, BANKCODE, B.DBALUNITNO, B.BANKACCNO, B.LINKMAN
					 FROM TQ_SUPPLY_RIGHT A, TF_DEPT_BALUNIT B
					 WHERE  A.TRADEDATE >= p_tradeDate
					 AND    A.TRADEDATE <= p_tradeDate
					 AND A.TRADETYPECODE = '1S'
					 AND SUBSTR(A.BALUNITNO, 1, 2) <> '0D'
					 AND A.BALUNITNO = B.DBALUNITNO
					 AND B.DEPTTYPE = '2'
					 GROUP BY  B.DBALUNIT, BANKCODE, B.BANKACCNO, B.LINKMAN, B.DBALUNITNO
					 UNION ALL
					 SELECT B.DBALUNIT, SUM(A.TRADEMONEY) * (1 - 0.007)  充值, 0 冲正, 0 回收, BANKCODE, B.DBALUNITNO, B.BANKACCNO, B.LINKMAN
					 FROM TQ_SUPPLY_RIGHT A, TF_DEPT_BALUNIT B
					 WHERE  A.TRADEDATE >= p_tradeDate
					 AND    A.TRADEDATE <= p_tradeDate
					 AND A.TRADETYPECODE = '1S'
					 AND SUBSTR(A.BALUNITNO, 1, 2) = '0D'
					 AND A.BALUNITNO = B.DBALUNITNO
					 AND B.DEPTTYPE = '2'
					 GROUP BY  B.DBALUNIT, BANKCODE, B.BANKACCNO, B.LINKMAN, B.DBALUNITNO
					 UNION ALL
					 SELECT  B.DBALUNIT, SUM(A.TRADEMONEY) 充值, 0 冲正, 0 回收, BANKCODE, B.DBALUNITNO, B.BANKACCNO, B.LINKMAN
					 FROM TF_OUTSUPPLY_ADJUST A, TF_DEPT_BALUNIT B
					  WHERE  A.TRADEDATE >= p_tradeDate
					 AND    A.TRADEDATE <= p_tradeDate
					 AND A.RSRVCHAR = 'S1'
					 AND A.BALUNITNO = B.DBALUNITNO
					 AND B.DEPTTYPE = '2'
					 AND A.DEALSTATECODE = '1'
					 GROUP BY  B.DBALUNIT, BANKCODE, B.BANKACCNO, B.LINKMAN, B.DBALUNITNO
					 UNION ALL
					 SELECT   B.DBALUNIT, 0 充值, SUM(A.TRADEMONEY) 冲正, 0 回收, BANKCODE, B.DBALUNITNO, B.BANKACCNO, B.LINKMAN
					 FROM TF_B_OUTSUPPLY_ADJUST A, TF_DEPT_BALUNIT B
					 WHERE A.INLISTTIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.INLISTTIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') 
					 AND A.BALUNITNO = B.DBALUNITNO
					 AND B.DEPTTYPE = '2'
					 AND A.DEALSTATECODE = '1'
					 GROUP BY B.DBALUNIT, BANKCODE, B.BANKACCNO, B.LINKMAN, B.DBALUNITNO
					 UNION ALL
					 SELECT  B.DBALUNIT, 0 充值, 0 冲正, SUM(A.TRADEMONEY)  回收, BANKCODE, B.DBALUNITNO, B.BANKACCNO, B.LINKMAN
					 FROM TF_B_OUTSUPPLY_ADJUST A, TF_DEPT_BALUNIT B
					 WHERE A.DEALTIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
				 AND A.DEALTIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') 
					 AND A.BALUNITNO = B.DBALUNITNO
					 AND B.DEPTTYPE = '2'
					 AND A.DEALSTATECODE = '2'
					 GROUP BY B.DBALUNIT, BANKCODE, DBALUNITNO, B.BANKACCNO, B.LINKMAN ) TMP
		INNER JOIN TD_M_BANK K ON TMP.BANKCODE = K.BANKCODE
		LEFT JOIN TD_M_BFJ_BANK BB ON BB.SYSTEMCODE = K.BFJBANKCODE 
		GROUP BY DBALUNIT, BFJBANKCODE, LINKMAN, BANKACCNO, DBALUNITNO, BB.ACCOUNT;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001004';
			p_retMsg  := '商户代理充值入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;		
	END;
	
	--1.5）代理充值入系统业务账单表 
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
	  OTHERBANK, OTHERUSERNAME, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), BALUNIT, BALUNITNO, '0', '05', SUM(充值) - SUM(冲正) + SUM(回收), '01', 
	  BFJBANKCODE, LINKMAN, '0', 0, SUM(充值) - SUM(冲正) + SUM(回收), '0', BB.ACCOUNT 
		FROM (SELECT B.BALUNIT, SUM(A.TRADEMONEY) 充值, 0 冲正, 0 回收, B.FINBANKCODE BANKCODE , B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 FROM TQ_SUPPLY_RIGHT A, TF_SELSUP_BALUNIT B 
					 WHERE A.TRADEDATE =  p_tradeDate  
					 AND A.TRADETYPECODE = '02'
					 AND SUBSTR(A.BALUNITNO, 1, 2) <> '0D'
					 AND A.BALUNITNO = B.BALUNITNO 
					 GROUP BY B.BALUNIT, B.FINBANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 UNION ALL
					 SELECT B.BALUNIT, SUM(A.TRADEMONEY) * (1 - 0.007)  充值, 0 冲正, 0 回收, B.FINBANKCODE BANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 FROM TQ_SUPPLY_RIGHT A, TF_SELSUP_BALUNIT B
					 WHERE A.TRADEDATE =  p_tradeDate  
					 AND A.TRADETYPECODE = '02'
					 AND SUBSTR(A.BALUNITNO, 1, 2) = '0D'
					 AND A.BALUNITNO = B.BALUNITNO
					 GROUP BY B.BALUNIT, B.FINBANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 UNION ALL
					 SELECT B.BALUNIT, SUM(A.TRADEMONEY)  充值, 0 冲正, 0 回收, B.FINBANKCODE BANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 FROM TF_OUTSUPPLY_ADJUST A, TF_SELSUP_BALUNIT B
					 WHERE A.TRADEDATE =  p_tradeDate  
					 AND A.BALUNITNO = B.BALUNITNO
					 AND A.DEALSTATECODE = '1'
					 GROUP BY B.BALUNIT, B.FINBANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 UNION ALL
					 SELECT  B.BALUNIT, 0 充值, SUM(A.TRADEMONEY)  冲正, 0 回收, B.FINBANKCODE BANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 FROM TF_B_OUTSUPPLY_ADJUST A, TF_SELSUP_BALUNIT B
					 WHERE A.DEALTIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.DEALTIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') 
					 AND A.BALUNITNO = B.BALUNITNO
					 AND A.DEALSTATECODE = '1' 
					 GROUP BY  B.BALUNIT, B.FINBANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 UNION ALL
					 SELECT  B.BALUNIT, 0 充值, 0 冲正, SUM(A.TRADEMONEY)  回收, B.FINBANKCODE BANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO
					 FROM TF_B_OUTSUPPLY_ADJUST A, TF_SELSUP_BALUNIT B
					 WHERE A.DEALTIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
					 AND A.DEALTIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') 
					 AND A.BALUNITNO = B.BALUNITNO
					 AND A.DEALSTATECODE = '2'
					 GROUP BY  B.BALUNIT, B.FINBANKCODE, B.BALUNITNO, B.LINKMAN, B.BANKACCNO) TMP
		INNER JOIN TD_M_BANK K  ON K.BANKCODE = TMP.BANKCODE 
		LEFT JOIN TD_M_BFJ_BANK BB ON BB.SYSTEMCODE = K.BFJBANKCODE 
		GROUP BY  BALUNIT, BANK, LINKMAN, BFJBANKCODE, BALUNITNO, BANKACCNO, BB.ACCOUNT;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001005';
			p_retMsg  := '代理充值入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	 
	END;
	
	
	--1.6）江阴账单
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
	  OTHERBANK, OTHERUSERNAME, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT  FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), '江阴账单', null, '0', '18', B.TRANSFEE , '01', 
	  null, null, '0', 0, B.TRANSFEE , '0', null  
		FROM TF_TRADE_OUTCOMEFIN A, TF_TRADE_OUTCOMEFIN B
		WHERE A.BEGINTIME = B.BEGINTIME
		AND A.ENDTIME = B.ENDTIME
		AND A.BALUNITNO = '01H00005' -- 江阴市民卡公司
		AND B.BALUNITNO = '01H00006' -- 张家港公交公司
		AND P_TRADEDATE = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')
		AND  TO_CHAR(A.ENDTIME, 'YYYYMMDD') >= TO_CHAR((TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM') ) , 'YYYYMMDD')
        AND  TO_CHAR(A.ENDTIME, 'YYYYMMDD') <= TO_CHAR(TRUNC(SYSDATE, 'MM')-1, 'YYYYMMDD');
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001033';
			p_retMsg  := '江阴账单入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--1.8) 团购业务
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, DEPARTID,
	  OTHERBANK, OTHERUSERNAME, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT  FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), D.DEPARTNAME || S.SHOPNAME, null, '0', '19', (SUM(B.CARDSERVFEE)  +  SUM(B.CARDDEPOSITFEE)  +
                    SUM(B.SUPPLYMONEY)  + SUM(B.TRADEPROCFEE)  +
									  SUM(B.FUNCFEE)  +  SUM(B.OTHERFEE)) , '01', D.DEPARTNO, 
	  null, null, '0', 0, (SUM(B.CARDSERVFEE)  +  SUM(B.CARDDEPOSITFEE)  +
                    SUM(B.SUPPLYMONEY)  + SUM(B.TRADEPROCFEE)  +
									  SUM(B.FUNCFEE)  +  SUM(B.OTHERFEE)) , '0', null   
		FROM
		TF_F_GROUPBUY_RECORD G
		INNER JOIN TF_F_GROUPBUY_TRADE GT ON GT.GROUPID = G.ID
		INNER JOIN TF_B_TRADE T ON T.TRADEID = GT.TRADEID
		INNER JOIN TF_B_TRADEFEE B ON T.TRADEID = B.TRADEID
		INNER JOIN TD_M_INSIDEDEPART D ON B.OPERATEDEPARTID = D.DEPARTNO
		INNER JOIN TD_M_GROUPBUY_SHOP S ON S.SHOPID = G.SHOPID
		WHERE G.CANCELCODE = '0'
		AND GT.CANCELCODE = '0' 
		AND T.TRADETYPECODE = '7H'
		AND T.OPERATETIME >=
								 TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
		AND T.OPERATETIME <=
								 TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS') 
		GROUP BY S.SHOPNAME,D.DEPARTNO,D.DEPARTNAME;
		
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001034';
			p_retMsg  := '团购业务入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--1.9) 换乘奖励充值
	BEGIN
	INSERT INTO TF_F_BFJ_TRADERECORD
	(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
		ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH) 
    SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),'换乘奖励充值','0','22',(SUM(CHARGEMONEY) / 0.8) ,'01',
	'0',0,(SUM(CHARGEMONEY) / 0.8) ,'0'  
		FROM TF_B_AWARDS A
		INNER JOIN TD_M_INSIDESTAFF S ON A.OPERATESTAFFNO = S.STAFFNO
		INNER JOIN TD_M_INSIDEDEPART D ON A.OPERATEDEPARTID = D.DEPARTNO
		WHERE(  to_char(a.OPERATETIME,'yyyymmdd') >= to_char((to_date(p_tradeDate,'yyyymmdd')),'yyyymmdd'))
		 AND (  to_char(a.OPERATETIME,'yyyymmdd') <= to_char((to_date(p_tradeDate,'yyyymmdd')),'yyyymmdd'));
	  EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001051';
			p_retMsg  := '换乘奖励充值入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	
	END;
	
	--1.7) 更新银行手续费
	BEGIN 
		FOR v_cur in(
		   SELECT TRADEID,SLOPE,OFFSET,LOWERBOUND,UPPERBOUND,TRADEMONEY FROM 
		   TF_F_BFJ_TRADERECORD T
		   INNER JOIN TD_DLBALUNIT_FEESCHEME C ON T.CUSTOMERCODE = C.BALUNITNO
		   INNER JOIN TF_FEE F ON C.COMSCHEMENO = F.FEERULENO
		   WHERE T.TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd')
		   AND T.TRADETYPECODE = '05'
		) 
		LOOP
		BEGIN
			IF (v_cur.TRADEMONEY > v_cur.LOWERBOUND AND v_cur.TRADEMONEY < v_cur.UPPERBOUND) THEN  
			BEGIN
				v_tradeMoney := v_cur.TRADEMONEY;
				IF v_cur.SLOPE != 0 THEN
					v_tradeMoney := v_tradeMoney * (1 - v_cur.SLOPE);
				END IF;
				IF v_cur.OFFSET != 0 THEN
					v_tradeMoney := v_tradeMoney - v_cur.OFFSET;
				END IF; 
				BEGIN
					UPDATE TF_F_BFJ_TRADERECORD SET TRADEMONEY = v_tradeMoney, FEE = v_cur.TRADEMONEY - v_tradeMoney
					WHERE TRADEID = v_cur.TRADEID;
					IF SQL%ROWCOUNT != 1 THEN 
					   p_retCode := 'SBFJ001006';
					   p_retMsg :='更新银行手续费失败'||SQLERRM;
					   ROLLBACK;    RETURN;
					END IF;
					EXCEPTION WHEN OTHERS THEN
						p_retCode := 'SBFJ001006';
						p_retMsg :='更新银行手续费失败'||SQLERRM;
						ROLLBACK;	RETURN;
				
				END;
			END;
			END IF;
		END;
		END LOOP;
	END;
	
	--2） 出金
	--2.1) 商户转账数据入系统业务账单表 
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, FEE, BFJTRADETYPECODE, 
		OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),  TO_SINGLE_BYTE(BALUNIT), BANKACCNO, '1', '06', TRANSFEE * -1, COMFEE, '03',
		BFJBANKCODE, BALUNIT, BANKACCNO, '0', 0, TRANSFEE * -1, '0', BB.ACCOUNT
		FROM (
					                                                                       
					 SELECT C.BFJBANKCODE,B.BALUNITNO, B.BALUNIT, B.BANKACCNO, (A.TRANSFEE - 
						 (SELECT NVL(SUM(NVL(d.REFUNDMENT,0)) - SUM(NVL(d.REBROKERAGE,0)),0)
									 FROM TF_B_SPEADJUSTACC d
									 WHERE D.STATECODE IN  ('1' , '2')
									 AND d.CHECKTIME IS NOT NULL
									 AND d.CHECKTIME >= TO_DATE(TO_CHAR(A.BEGINTIME,'yyyy-MM-dd'),'yyyy-MM-dd')
									 AND d.CHECKTIME < TO_DATE(TO_CHAR(A.ENDTIME-1,'yyyy-MM-dd'),'yyyy-MM-dd')+1
									 AND d.BALUNITNO = B.BALUNITNO)) / 1.0 TRANSFEE, B.LINKMAN, A.COMFEE
					 FROM TF_TRADE_OUTCOMEFIN A
					 INNER JOIN TF_TRADE_BALUNIT B ON A.BALUNITNO = B.BALUNITNO
					 LEFT JOIN TD_M_BANK C ON B.REALFINBANKCODE = C.BANKCODE  
					 WHERE  TO_CHAR(A.ENDTIME,'YYYYMMDD') = TO_CHAR((TO_DATE(p_tradeDate,'YYYYMMDD')+1),'YYYYMMDD') 
					 AND A.BALUNITNO NOT IN ('0BX00011','0BX00021','0BX00022','0BX00012','03000001')
					 AND B.FINTYPECODE = '0'  
					 AND A.TRANSFEE > 0  
					 UNION ALL
					 SELECT C.BFJBANKCODE,B.BALUNITNO, B.BALUNIT, B.BANKACCNO, A.TRANSFEE  / 1.0 TRANSFEE, B.LINKMAN, 0 
					 FROM TF_OUTCOMEFIN_SINOPEC A
					 INNER JOIN TF_TRADE_BALUNIT B ON  A.BALUNITNO = B.BALUNITNO
					 LEFT JOIN TD_M_BANK C ON B.REALFINBANKCODE = C.BANKCODE 
					 WHERE TO_CHAR(A.DEALTIME,'YYYYMMDD') = TO_CHAR((TO_DATE(p_tradeDate,'YYYYMMDD')),'YYYYMMDD')   
					 AND B.FINTYPECODE = '0'
					 AND B.BALUNITNO IN ('0BX00011', '0BX00012', '03000001') 
					 AND A.TRANSFEE > 0
					 UNION ALL
					 SELECT C.BFJBANKCODE,B.BALUNITNO, B.BALUNIT, B.BANKACCNO, A.TRANSFEE  / 1.0 TRANSFEE, B.LINKMAN, 0
					 FROM TF_OUTCOMEFIN_SINOPEC A, TF_TRADE_BALUNIT B, TD_M_BANK C
					 WHERE TO_CHAR(A.DEALTIME,'YYYYMMDD') = TO_CHAR((TO_DATE(p_tradeDate,'YYYYMMDD')),'YYYYMMDD')  
					 AND A.BALUNITNO = B.BALUNITNO
					 AND B.FINTYPECODE = '0'
					 AND B.BALUNITNO IN ('0BX00021', '0BX00022', '03000001')
					 AND B.REALFINBANKCODE = C.BANKCODE(+) 
					 AND A.TRANSFEE > 0 
					 UNION ALL                                                                  
					 SELECT C.BFJBANKCODE,B.BALUNITNO, B.BALUNIT, B.BANKACCNO, (A.TRANSFEE) / 1.0 TRANSFEE, B.LINKMAN, A.COMFEE
					 FROM TF_RAIL_OUTCOMEFIN A
					 INNER JOIN TF_TRADE_BALUNIT B ON A.BALUNITNO = B.BALUNITNO
					 LEFT  JOIN TD_M_BANK C ON B.REALFINBANKCODE = C.BANKCODE 
					 LEFT JOIN ( SELECT NVL(SUM(NVL(d.REFUNDMENT,0)) - SUM(NVL(d.REBROKERAGE,0)),0) REFUNDMENT,BALUNITNO
								 FROM TF_B_SPEADJUSTACC d
								 WHERE D.STATECODE IN  ('1' , '2')
								 AND d.CHECKTIME IS NOT NULL
								 AND d.CHECKTIME >= TO_DATE(p_tradeDate, 'yyyyMMdd')
								 AND d.CHECKTIME < TO_DATE(p_tradeDate, 'yyyyMMdd') + 1
								 GROUP BY BALUNITNO) R ON R.BALUNITNO = B.BALUNITNO
					 WHERE to_char(a.ENDTIME,'yyyymmdd')  = to_char((to_date(p_tradeDate,'yyyymmdd')+1),'yyyymmdd')
					 AND B.FINTYPECODE = '0' 
					 AND A.TRANSFEE > 0
					 UNION ALL
					 SELECT C.BFJBANKCODE, A.BALUNITNO, B.BALUNIT,B.BANKACCNO,
					 (A.TRANSFEE - 
						 (SELECT NVL(SUM(NVL(d.REFUNDMENT,0)) - SUM(NVL(d.REBROKERAGE,0)),0)
									 FROM TF_B_SPEADJUSTACC d
									 WHERE D.STATECODE IN  ('1' , '2')
									 AND d.CHECKTIME IS NOT NULL
									 AND d.CHECKTIME >= TO_DATE(TO_CHAR(A.BEGINTIME,'yyyy-MM-dd'),'yyyy-MM-dd')
									 AND d.CHECKTIME < TO_DATE(TO_CHAR(A.ENDTIME-1,'yyyy-MM-dd'),'yyyy-MM-dd')+1
									 AND d.BALUNITNO = B.BALUNITNO)) / 1.0 TRANSFEE,B.LINKMAN,A.COMFEE
					 FROM TF_TRADE_OUTCOMEFIN A, TF_TRADE_BALUNIT B,TD_M_BANK C
					 WHERE TO_CHAR(A.ENDTIME,'YYYYMMDD') >= TO_CHAR((TO_DATE(p_tradeDate,'YYYYMMDD')+1),'YYYYMMDD')
						   AND TO_CHAR(A.ENDTIME,'YYYYMMDD') <= TO_CHAR((TO_DATE(p_tradeDate,'YYYYMMDD')+1),'YYYYMMDD')
						   AND A.BALUNITNO=B.BALUNITNO
						   AND B.FINTYPECODE='1'
						   AND B.BALUNITNO NOT IN ('0BX00011','0BX00021','0BX00022','0BX00012','03000001')
						   AND B.BANKCODE=C.BANKCODE(+)
						   AND A.TRANSFEE > 0
					union all
					SELECT  C.BFJBANKCODE,B.BALUNITNO, B.BALUNIT, B.BANKACCNO,
					  A.RENEWFINFEE   / 1.0 TRANSFEE,B.LINKMAN,A.COMFEE
					FROM TF_TRADE_OUTCOMEFIN A, TF_TRADE_BALUNIT B,TD_M_BANK C
					WHERE (  TO_CHAR(A.ENDTIME,'YYYYMMDD') >= TO_CHAR((TO_DATE(P_TRADEDATE,'YYYYMMDD')+1),'YYYYMMDD'))
					   AND ( TO_CHAR(A.ENDTIME,'YYYYMMDD') <= TO_CHAR((TO_DATE(P_TRADEDATE,'YYYYMMDD')+1),'YYYYMMDD'))
					   AND A.BALUNITNO=B.BALUNITNO
					   AND B.FINTYPECODE='0'
					   AND B.BALUNITNO IN ('0BX00011','0BX00021','0BX00022','0BX00012','03000001')
					   AND B.BANKCODE=C.BANKCODE
					   AND A.RENEWFINFEE > 0
					 ) T
		LEFT JOIN TD_M_BFJ_BANK BB ON BB.SYSTEMCODE = T.BFJBANKCODE ;	
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001007';
			p_retMsg  := '商户转账数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--2.2）出租车转账数据入系统业务账单表 -- 上午
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE,
	   OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), BALUNIT, '1', '07', TRANSFEE* -1, '03',
	   BFJBANKCODE, BALUNIT, BANKACCNO, '0', 0, TRANSFEE* -1, '0', BB.ACCOUNT
		FROM (SELECT DECODE(A.FINBANKCODE,'000A','出租车-农行上午','A059','出租车-农行上午','000L','出租车-苏州银行上午','L002','出租车-苏州银行上午','000E','出租车-交行上午') BALUNIT,
		DECODE(A.FINBANKCODE,'000A','农行中转账户','A059','农行中转账户','000L','苏州银行中转账户','L002','苏州银行中转账户','000E','交行中转账户') BANKACCNO,
		SUM(A.TRANSFEE / 1.0) TRANSFEE, A.FINBANKCODE 
					 FROM TF_TAXI_OUTCOMEFIN A, TF_TRADE_BALUNIT B 
					 WHERE A.BALUNITNO = B.BALUNITNO 
					 AND A.ENDTIME = TO_DATE(p_tradeDate || '000000','YYYYMMDDHH24MISS')
					 AND A.TRANSFEE > 0
					 AND A.BALUNITNO NOT IN
								 (SELECT DETAILNO
									from TF_UNITE_BALUNIT
									where STATECODE in ('1', '2'))
					AND A.FINBANKCODE IN ('000A','000E','000L','A059','L002')
			GROUP BY A.FINBANKCODE 
					 ) T
		INNER JOIN TD_M_BANK C ON T.FINBANKCODE = C.BANKCODE
		LEFT JOIN TD_M_BFJ_BANK BB ON BB.SYSTEMCODE = C.BFJBANKCODE ;	
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001008';
			p_retMsg  := '出租车转账数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--2.2）出租车转账数据入系统业务账单表 -- 下午
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE,
	   OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), BALUNIT, '1', '07', TRANSFEE* -1, '03',
	   BFJBANKCODE, BALUNIT, BANKACCNO, '0', 0, TRANSFEE* -1, '0', BB.ACCOUNT
		FROM (SELECT DECODE(A.FINBANKCODE,'000A','出租车-农行下午','A059','出租车-农行下午','000L','出租车-苏州银行下午','L002','出租车-苏州银行下午','000E','出租车-交行下午') BALUNIT,
		DECODE(A.FINBANKCODE,'000A','农行中转账户','A059','农行中转账户','000L','苏州银行中转账户','L002','苏州银行中转账户','000E','交行中转账户') BANKACCNO,
		SUM(A.TRANSFEE / 1.0) TRANSFEE, A.FINBANKCODE 
					 FROM TF_TAXI_OUTCOMEFIN A, TF_TRADE_BALUNIT B
					 WHERE A.BALUNITNO = B.BALUNITNO 
					 AND A.ENDTIME = TO_DATE(p_tradeDate || '120000','YYYYMMDDHH24MISS') 
					 AND A.TRANSFEE > 0
					 AND A.BALUNITNO NOT IN
								 (SELECT DETAILNO
									from TF_UNITE_BALUNIT
									where STATECODE in ('1', '2'))
					 AND A.FINBANKCODE IN ('000A','000E','000L','A059','L002')
			GROUP BY A.FINBANKCODE 
					 ) T
		INNER JOIN TD_M_BANK C ON T.FINBANKCODE = C.BANKCODE
		LEFT JOIN TD_M_BFJ_BANK BB ON BB.SYSTEMCODE = C.BFJBANKCODE ;	
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001008';
			p_retMsg  := '出租车转账数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--2.3)退充值数据入系统业务账单表 
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
	  OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),  custname, '1', '08', factmoney* -1, '03',
	    BFJBANKCODE,  custname, BANKACCNO, '0', 0, factmoney * -1, '0',  ACCOUNT
		FROM TF_B_REFUND A, TD_M_BANK B,TD_M_BFJ_BANK BB
		WHERE A.BANKCODE = B.BANKCODE(+)
		AND   B.BFJBANKCODE = BB.SYSTEMCODE(+)
		AND A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
		AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
		AND A.BANKACCNO != '0';
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001008';
			p_retMsg  := '退充值数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END; 
	
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
	  OTHERBANK, OTHERUSERNAME, OTHERBANKACCOUNT, ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH, ACCOUNT)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),  custname, '1', '08', SUM(factmoney)* -1, '03',
	    BFJBANKCODE,  custname, BANKACCNO, '0', 0, SUM( factmoney)* -1, '0',  ACCOUNT
		FROM TF_B_REFUND A, TD_M_BANK B,TD_M_BFJ_BANK BB
		WHERE A.BANKCODE = B.BANKCODE(+)
		AND   B.BFJBANKCODE = BB.SYSTEMCODE(+)
		AND A.OPERATETIME >= TO_DATE(p_tradeDate || '000000', 'YYYYMMDDHH24MISS')
		AND A.OPERATETIME <= TO_DATE(p_tradeDate || '235959', 'YYYYMMDDHH24MISS')
		AND A.BANKACCNO = '0'
		GROUP BY A.custname,B.BFJBANKCODE,BANKACCNO,BB.ACCOUNT;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001008';
			p_retMsg  := '退充值数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--可的退充值算入金
	BEGIN
		UPDATE TF_F_BFJ_TRADERECORD SET AMOUNTTYPE = '0' WHERE  TRADEDATE = TO_DATE(p_tradeDate,'yyyyMMdd') AND (NAME LIKE '%可的%' OR NAME ='银联商务' OR NAME ='全民付')  AND TRADETYPECODE = '08';
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001033';
			p_retMsg  := '可的退充值算入金失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	 
	--2.4)网店转账数据入系统业务账单表
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME,CUSTOMERCODE, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
	   ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),p_tradeDate || '网点转账','', '1' , '09', SUM(金额) , '02', 
	    '0', 0, SUM(金额) , '0'
		FROM(
			SELECT (NVL(sum(销户金额),0)) 金额
			FROM
			(
			SELECT D.DEPARTNO 网点编号,D.DEPARTNAME 网点名称,sum(B.CARDSERVFEE+B.CARDDEPOSITFEE+B.SUPPLYMONEY+B.TRADEPROCFEE+B.FUNCFEE+B.OTHERFEE)/1.0 押金退还,0 旅游卡押金退还,0 销户金额
			FROM TF_B_TRADE A,TF_B_TRADEFEE B,TD_M_INSIDEDEPART D
			WHERE ((A.TRADETYPECODE = '03' AND A.CARDNO NOT LIKE '215018%' AND (B.CARDSERVFEE+B.CARDDEPOSITFEE+B.SUPPLYMONEY+B.TRADEPROCFEE+B.FUNCFEE+B.OTHERFEE) < 0)  --换卡退还押金
			  OR A.TRADETYPECODE = '76'  --月票升高龄退还
			)
			AND A.TRADEID = B.TRADEID(+)
			AND A.OPERATEDEPARTID = D.DEPARTNO
			AND A.OPERATETIME >= TO_DATE(p_tradeDate||'000000','YYYYMMDDHH24MISS')
			AND A.OPERATETIME <= TO_DATE(p_tradeDate||'235959','YYYYMMDDHH24MISS') 
			GROUP BY D.DEPARTNO,D.DEPARTNAME
			UNION ALL
			SELECT D.DEPARTNO 网点编号,D.DEPARTNAME 网点名称,sum(B.CARDDEPOSITFEE)/1.0 押金退还,0 旅游卡押金退还,0 销户金额
			FROM TF_B_TRADE A,TF_B_TRADEFEE B,TD_M_INSIDEDEPART D
			WHERE ((A.TRADETYPECODE = '05' AND A.REASONCODE IN ('11','12','13','15')) OR A.TRADETYPECODE = 'A5'   --退卡退押金 |||| modify by jiangbb 增加15不可读自然损 from may 12 邮件
			)
			AND A.TRADEID = B.TRADEID(+)
			AND A.OPERATEDEPARTID = D.DEPARTNO
			AND A.OPERATETIME >= TO_DATE(p_tradeDate||'000000','YYYYMMDDHH24MISS')
			AND A.OPERATETIME <= TO_DATE(p_tradeDate||'235959','YYYYMMDDHH24MISS') 
			GROUP BY D.DEPARTNO,D.DEPARTNAME
			UNION ALL
			SELECT D.DEPARTNO 网点编号,D.DEPARTNAME 网点名称,0 押金退还,SUM(DECODE(A.TRADETYPECODE,'7K',B.CARDDEPOSITFEE,0))/1.0 旅游卡押金退还,sum(B.SUPPLYMONEY) 销户金额
			FROM TF_B_TRADE A,TF_B_TRADEFEE B,TD_M_INSIDEDEPART D
			WHERE (A.TRADETYPECODE = '06'    --销户(不可读卡退卡的)
			  OR ((A.TRADETYPECODE = '05' AND A.REASONCODE in ('11','12','13')) OR A.TRADETYPECODE = 'A5')--(可读卡退卡的)
			  OR A.TRADETYPECODE = '7K')  --旅游卡回收（可读卡）
			AND A.TRADEID = B.TRADEID(+)
			AND A.OPERATEDEPARTID = D.DEPARTNO
			AND A.OPERATETIME >= TO_DATE(p_tradeDate||'000000','YYYYMMDDHH24MISS')
			AND A.OPERATETIME <= TO_DATE(p_tradeDate||'235959','YYYYMMDDHH24MISS') 
			GROUP BY D.DEPARTNO,D.DEPARTNAME
			UNION ALL
			SELECT D.DEPARTNO 网点编号,D.DEPARTNAME 网点名称,0 押金退还,sum(0-B.BACKDEPOSIT)/1.0 旅游卡押金退还,sum(0-B.BACKMONEY)/1.0 销户金额
			FROM TF_B_TRADE A,TF_B_TRADE_SZTRAVEL_RF B,TD_M_INSIDEDEPART D
			WHERE A.TRADETYPECODE = '7K'  --旅游卡回收（不可读卡）
			AND A.TRADEID = B.TRADEID(+)
			AND B.ISUPDATED = '1'
			AND A.OPERATEDEPARTID = D.DEPARTNO
			AND A.OPERATETIME >= TO_DATE(p_tradeDate||'000000','YYYYMMDDHH24MISS')
			AND A.OPERATETIME <= TO_DATE(p_tradeDate||'235959','YYYYMMDDHH24MISS') 
			GROUP BY D.DEPARTNO,D.DEPARTNAME
			));
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001008';
			p_retMsg  := '网店转账数据入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	--2.5）司机卡消费补录 取汇总
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
		ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'), TO_CHAR(add_months(sysdate,-1),'YYYYMM') || '司机卡消费补录','1' ,'16', SUM(TL.TRADEMONEY)* -1, '03',
	    '0',0,SUM(TL.TRADEMONEY)* -1,'0' 
			FROM    TF_B_TRADE_ACPMANUAL TL, TD_M_CALLINGNO TNO, TD_M_CORP TP, TD_M_DEPART TT,
					TD_M_CALLINGSTAFF TCF, TD_M_INSIDESTAFF TI 
			WHERE   p_tradeDate = to_char(trunc(sysdate, 'mm'),'yyyymmdd')
			AND     TL.OPERATETIME   >= trunc(add_months(sysdate,-1), 'mm') 
			AND     TL.OPERATETIME   <  trunc(sysdate, 'mm')
			AND     TL.CALLINGNO      = '02'
			AND		TCF.CALLINGNO	  = '02' 
			AND     TL.CALLINGNO      = TNO.CALLINGNO(+) 
			AND     TL.CORPNO         = TP.CORPNO    (+) 
			AND     TL.DEPARTNO       = TT.DEPARTNO  (+) 
			AND     TL.CALLINGSTAFFNO = TCF.STAFFNO  (+) 
			AND     TL.STAFFNO        = TI.STAFFNO   (+)
			GROUP BY TO_CHAR(add_months(sysdate,-1),'YYYYMM');
			EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001009';
			p_retMsg  := '司机卡消费补录入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	
	END; 
	
	--2.6） 公交回收月报
	BEGIN
		INSERT INTO TF_F_BFJ_TRADERECORD
		(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
		ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH)
		SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),B.BALUNIT,'1','17',SUM(A.TRANSFEE) * -1,'03',
		'0',0,SUM(A.TRANSFEE) * -1,'0' 
          FROM TF_BUSRENEW_OUTCOMEFIN A, TF_TRADE_BALUNIT B,TD_M_BANK C
         WHERE  p_tradeDate = to_char(trunc(sysdate, 'mm') + 6,'yyyymmdd')
		   AND  A.BEGINTIME >= (trunc(add_months(sysdate,-1), 'mm') + 1) 
           AND  A.BEGINTIME <= trunc(sysdate, 'mm')
           AND A.BALUNITNO=B.BALUNITNO
           AND B.BANKCODE=C.BANKCODE
      GROUP BY C.BANK,SUBSTR(A.BALUNITNO,5,4),B.BALUNIT,B.BANKACCNO; 
	  EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001031';
			p_retMsg  := '公交回收月报入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	
	END;
	
	
	--2.7) 旅游卡客户退款
	BEGIN
	INSERT INTO TF_F_BFJ_TRADERECORD
	(TRADEID, TRADEDATE, NAME, AMOUNTTYPE, TRADETYPECODE, TRADEMONEY, BFJTRADETYPECODE, 
		ISCASH, USEDMONEY, LEFTMONEY, ISNEEDMATCH) 
    SELECT FUN_GETBFJTRADEID(p_tradeDate), TO_DATE(p_tradeDate,'yyyyMMdd'),CUSTNAME,'1','21',(BACKMONEY+BACKDEPOSIT) * -1,'03',
	'0',0,(BACKMONEY+BACKDEPOSIT) * -1,'0' 
    FROM TF_B_TRADE_SZTRAVEL_RF a,TD_M_INSIDEDEPART b,TD_M_INSIDESTAFF c,TD_M_PAPERTYPE d
    WHERE a.OPERATEDEPARTID = b.DEPARTNO
      AND a.OPERATESTAFFNO = c.STAFFNO
      AND a.ISUPDATED = '1'  --已更新退卡金额
      AND a.PAPERTYPECODE = d.PAPERTYPECODE(+)
      AND (p_tradeDate <= to_char(A.OPERATETIME,'yyyymmdd'))
      AND (p_tradeDate >= to_char(A.OPERATETIME,'yyyymmdd')); 
	  EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001050';
			p_retMsg  := '旅游卡客户退款入系统业务账单表失败' || SQLERRM;
			ROLLBACK; RETURN;	
	END;

	
	--3）更新备付金任务表
	BEGIN
		UPDATE TF_F_BFJ_TASK SET TASKSTATE = '1' WHERE BFJDATE = p_tradeDate AND TASKSTATE = '0';
		IF SQL%ROWCOUNT != 1 THEN 
			RAISE v_ex;			
		END IF;
		EXCEPTION WHEN OTHERS THEN
			p_retCode := 'SBFJ001009';
			p_retMsg  := '3）更新备付金任务表失败' || SQLERRM;
			ROLLBACK; RETURN;	  
	END;
	
	
	p_retCode := '0000000000';
    p_retMsg  := 'OK';
    COMMIT; 
    RETURN;  
end;
/
show errors