CREATE OR REPLACE PROCEDURE SP_AS_RELAXCARDCHANGE
(
    P_ID                CHAR,
    P_OLDCARDNO         CHAR,
    P_NEWCARDNO         CHAR,
    P_ASN               CHAR,

    P_OPERCARDNO        CHAR,
    P_TERMINALNO        CHAR,
    P_ENDDATENUM        CHAR,
	
	P_PACKAGETYPECODE   CHAR,		--套餐类型

    P_CUSTNAME          VARCHAR2,
    P_CUSTSEX           VARCHAR2,
    P_CUSTBIRTH         VARCHAR2,
    P_PAPERTYPE         VARCHAR2,
    P_PAPERNO           VARCHAR2,
    P_CUSTADDR          VARCHAR2,
    P_CUSTPOST          VARCHAR2,
    P_CUSTPHONE         VARCHAR2,
    P_CUSTEMAIL         VARCHAR2,
    P_REMARK            VARCHAR2,
	
	P_PASSPAPERNO		VARCHAR2,		--加*的证件号码
	P_PASSCUSTNAME		VARCHAR2,		--加*的姓名
	P_SERVICEFOR		CHAR,			--校验旧卡是否到期字段，0不同步给休闲表示已过期 1同步给休闲表示未过期
	p_CITYCODE      	CHAR,	 		--城市代码
	
    P_CURROPER          CHAR,
    P_CURRDEPT          CHAR,
    P_RETCODE   OUT CHAR, -- RETURN CODE
    P_RETMSG    OUT VARCHAR2  -- RETURN MESSAGE
)

AS
    V_TODAY         DATE := SYSDATE;
    V_CARDTYPE      CHAR(2);
    V_EX            EXCEPTION;
    V_SEQNO         CHAR(16);
    V_ENDDATE       CHAR(8);
	V_ACCOUNTTYPE	CHAR(1);
	V_SPARETIMES	INT;	
	V_PICTURE    	BLOB;
	V_COUNTIMAGE 	INT;
	V_LENGTH		INT;

BEGIN

	--判断城市代码 11位判断为无锡卡,其他为苏州卡
	BEGIN
		SELECT LENGTH(P_NEWCARDNO) INTO V_LENGTH FROM DUAL;
		EXCEPTION
			WHEN OTHERS THEN
			P_RETCODE :='S01901B109'; P_RETMSG :='获取卡号长度失败'|| SQLERRM;
			RETURN; ROLLBACK;
	END;

    -- 2) UPDATE OLD CARD'S USETAG
    BEGIN
        UPDATE TF_F_CARDXXPARKACC_SZ  SET USETAG = '0' WHERE CARDNO = P_OLDCARDNO AND USETAG='1';
        IF  SQL%ROWCOUNT != 1 THEN RAISE V_EX; END IF;
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B001'; P_RETMSG  := '更新惠民休闲年卡旧卡有效标志失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    SELECT CARDTYPECODE INTO V_CARDTYPE FROM TL_R_ICUSER WHERE CARDNO = P_OLDCARDNO;

    -- 3) UPDATE CUST INFO 不是市民卡才允许修改客户资料
	IF SUBSTR(P_NEWCARDNO,5,2) != '18' THEN
		BEGIN
			UPDATE TF_F_CUSTOMERREC
			SET    CUSTNAME      = NVL(P_CUSTNAME,CUSTNAME)  ,
				   CUSTSEX       = NVL(P_CUSTSEX,CUSTSEX)   ,
				   CUSTBIRTH     = NVL(P_CUSTBIRTH,CUSTBIRTH) ,
				   PAPERTYPECODE = NVL(P_PAPERTYPE,PAPERTYPECODE) ,
				   PAPERNO       = NVL(P_PAPERNO,PAPERNO)   ,
				   CUSTADDR      = NVL(P_CUSTADDR,CUSTADDR)  ,
				   CUSTPOST      = NVL(P_CUSTPOST,CUSTPOST)  ,
				   CUSTPHONE     = NVL(P_CUSTPHONE,CUSTPHONE) ,
				   CUSTEMAIL     = NVL(P_CUSTEMAIL,CUSTEMAIL) ,
				   REMARK        = NVL(P_REMARK,REMARK)    ,
				   UPDATESTAFFNO = P_CURROPER  ,
				   UPDATETIME    = V_TODAY
			WHERE  CARDNO        = P_NEWCARDNO;

			IF  SQL%ROWCOUNT != 1 THEN RAISE V_EX; END IF;
		EXCEPTION WHEN OTHERS THEN
			P_RETCODE := 'S00506B002'; P_RETMSG  := '更新客户资料失败,' || SQLERRM;
			ROLLBACK; RETURN;
		END;
	END IF;
	
    -- 4) GET TRADE ID
    SP_GETSEQ(SEQ => V_SEQNO);

    BEGIN
        INSERT INTO TF_B_CUSTOMERCHANGE
          (TRADEID,CARDNO,CUSTNAME,CUSTSEX,CUSTBIRTH,PAPERTYPECODE,
           PAPERNO,CUSTADDR,CUSTPOST,CUSTPHONE,CUSTEMAIL,REMARK,
           CHGTYPECODE,OPERATESTAFFNO,OPERATEDEPARTID,OPERATETIME)
        VALUES
          (V_SEQNO,P_NEWCARDNO,P_CUSTNAME,P_CUSTSEX,P_CUSTBIRTH,P_PAPERTYPE,
           P_PAPERNO,P_CUSTADDR,P_CUSTPOST,P_CUSTPHONE,P_CUSTEMAIL,P_REMARK,
           '01',P_CURROPER,P_CURRDEPT,V_TODAY);
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B003'; P_RETMSG  := '新增客户资料变更台帐失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    -- 5) INSERT A NEW ROW
    BEGIN
        MERGE INTO TF_F_CARDXXPARKACC_SZ T1
        USING (SELECT * FROM TF_F_CARDXXPARKACC_SZ WHERE CARDNO = P_OLDCARDNO) T2
        ON (T1.CARDNO = P_NEWCARDNO)
        WHEN MATCHED THEN
            UPDATE SET T1.CURRENTOPENYEAR = T2.CURRENTOPENYEAR,
                       T1.CARDTIMES       = 1                 ,
                       T1.CURRENTPAYTIME  = T2.CURRENTPAYTIME ,
                       T1.CURRENTPAYFEE   = T2.CURRENTPAYFEE  ,
                       T1.ENDDATE         = T2.ENDDATE        ,
                       T1.USETAG          = '1'               ,
                       T1.TOTALTIMES      = T2.TOTALTIMES     ,
                       T1.SPARETIMES      = T2.SPARETIMES     ,
                       T1.UPDATESTAFFNO   = P_CURROPER        ,
                       T1.UPDATETIME      = V_TODAY			  ,
					   T1.PACKAGETYPECODE = P_PACKAGETYPECODE ,
					   T1.ACCOUNTTYPE	  = T2.ACCOUNTTYPE	  ,
					   T1.CITYCODE		  = p_CITYCODE
        WHEN NOT MATCHED THEN
            INSERT
                (CARDNO,PACKAGETYPECODE,CURRENTOPENYEAR,CARDTIMES,CURRENTPAYTIME,
                CURRENTPAYFEE,ENDDATE,USETAG,TOTALTIMES,SPARETIMES,UPDATESTAFFNO,UPDATETIME,ACCOUNTTYPE,CITYCODE)
            VALUES(P_NEWCARDNO,P_PACKAGETYPECODE, T2.CURRENTOPENYEAR,1, T2.CURRENTPAYTIME,
                T2.CURRENTPAYFEE, T2.ENDDATE, '1', T2.TOTALTIMES, T2.SPARETIMES,P_CURROPER,V_TODAY,T2.ACCOUNTTYPE,p_CITYCODE);

        IF  SQL%ROWCOUNT != 1 THEN RAISE V_EX; END IF;

        SELECT ENDDATE,SPARETIMES,ACCOUNTTYPE INTO V_ENDDATE,V_SPARETIMES,V_ACCOUNTTYPE FROM TF_F_CARDXXPARKACC_SZ WHERE CARDNO = P_OLDCARDNO;
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B004'; P_RETMSG  := '从旧卡向新卡复制惠民休闲年卡信息失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    -- 6) LOG THE OPERATION
    BEGIN
        INSERT INTO TF_B_TRADE
            (TRADEID,ID,TRADETYPECODE,CARDNO,ASN,CARDTYPECODE,OLDCARDNO,
            OPERATESTAFFNO,OPERATEDEPARTID,OPERATETIME,RSRV2)
        VALUES
            (V_SEQNO,P_ID,'33',P_NEWCARDNO,P_ASN,V_CARDTYPE,P_OLDCARDNO,
            P_CURROPER,P_CURRDEPT,V_TODAY,P_PACKAGETYPECODE);
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B005'; P_RETMSG  := '新增惠民休闲年卡补换卡台帐失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    -- 10) LOG CARD CHANGE
    BEGIN
        INSERT INTO TF_CARD_TRADE
            (TRADEID, TRADETYPECODE, STROPERCARDNO, STRCARDNO, STRTERMNO, STRENDDATENUM, OPERATETIME)
        VALUES(V_SEQNO, '33', P_OPERCARDNO, P_NEWCARDNO, P_TERMINALNO, P_ENDDATENUM, V_TODAY);
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B006'; P_RETMSG  := '新增惠民休闲年卡补换卡卡片交易台帐失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    -- 11) SETUP THE RELATION BETWEEN CARDS AND FEATURES.
    BEGIN
        MERGE INTO TF_F_CARDUSEAREA T1
        USING      DUAL
        ON         (T1.CARDNO = P_NEWCARDNO AND T1.FUNCTIONTYPE = '08')
        WHEN MATCHED THEN
            UPDATE SET T1.USETAG = '1', T1.ENDTIME = V_ENDDATE,
            UPDATESTAFFNO = P_CURROPER, UPDATETIME = V_TODAY  ,
			RSRV1 = P_PACKAGETYPECODE
        WHEN NOT MATCHED THEN
            INSERT  (CARDNO    , FUNCTIONTYPE, USETAG, ENDTIME, UPDATESTAFFNO , UPDATETIME	, RSRV1)
            VALUES  (P_NEWCARDNO, '08'        , '1'   , V_ENDDATE, P_CURROPER, V_TODAY , P_PACKAGETYPECODE);

        IF  SQL%ROWCOUNT != 1 THEN RAISE V_EX; END IF;

    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B007'; P_RETMSG  := '新增卡片与惠民休闲年卡功能项关联关系失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;

    BEGIN
        UPDATE TF_F_CARDUSEAREA
        SET    USETAG        = '0'       ,  ENDTIME       = NULL,
               UPDATESTAFFNO = P_CURROPER , UPDATETIME    = V_TODAY
        WHERE  CARDNO = P_OLDCARDNO AND FUNCTIONTYPE = '08';

        IF  SQL%ROWCOUNT != 1 THEN RAISE V_EX; END IF;
    EXCEPTION WHEN OTHERS THEN
        P_RETCODE := 'S00506B008'; P_RETMSG  := '关闭卡片与惠民休闲年卡功能项关联关系失败,' || SQLERRM;
        ROLLBACK; RETURN;
    END;
	
	BEGIN 
		SELECT COUNT(*) INTO V_COUNTIMAGE FROM TF_F_CARDPARKPHOTO_SZ T WHERE  T.CARDNO=P_OLDCARDNO;
    END;
	
	--有照片则备份历史，更换到新卡号；无照片则不做处理
    IF V_COUNTIMAGE = '1' THEN
		---13)新卡照片更换为旧卡照片
		--）记录新卡照片历史表
		BEGIN
			INSERT INTO TB_F_CARDPARKPHOTO_SZ
					(CARDNO		,PICTURE	,OPERATESTAFFNO	,OPERATEDEPARTID	,OPERATETIME)
			SELECT P_NEWCARDNO	,T.PICTURE	,P_CURROPER		,P_CURRDEPT			,V_TODAY
			FROM TF_F_CARDPARKPHOTO_SZ T WHERE T.CARDNO=P_OLDCARDNO ;
			IF SQL%ROWCOUNT != 1 THEN
			  RAISE V_EX;
			END IF;
			EXCEPTION
			WHEN OTHERS THEN
			P_RETCODE := 'S001011144';
			P_RETMSG  := 'ERROR OCCURRED WHILE INSERT TB_F_CARDPARKPHOTO_SZ INFO' ||SQLERRM;
			ROLLBACK;
			RETURN;
		END;
		
		SELECT PICTURE INTO V_PICTURE FROM TF_F_CARDPARKPHOTO_SZ T WHERE   T.CARDNO=P_OLDCARDNO;
       BEGIN
			MERGE INTO TF_F_CARDPARKPHOTO_SZ T USING DUAL
			ON (T.CARDNO = P_NEWCARDNO)
            WHEN MATCHED THEN
              UPDATE
                 SET T.PICTURE         = V_PICTURE,
                     T.OPERATETIME     = V_TODAY,
                     T.OPERATEDEPARTID = P_CURRDEPT,
                     T.OPERATESTAFFNO  = P_CURROPER
            WHEN NOT MATCHED THEN
              INSERT
                (CARDNO		, PICTURE	,OPERATETIME	,OPERATEDEPARTID,OPERATESTAFFNO)
              VALUES
                (P_NEWCARDNO,V_PICTURE	,V_TODAY		,P_CURRDEPT		,P_CURROPER);
       END;
	END IF;
	
	--同步休闲接口 旧卡在有效期内的数据则同步给休闲
	IF P_SERVICEFOR = '1' THEN
		BEGIN
		  SP_AS_SYNGARDENXXCARD(P_NEWCARDNO,P_ASN,P_PAPERTYPE,P_PASSPAPERNO,P_PASSCUSTNAME,
							V_ENDDATE,V_SPARETIMES,'2',V_TODAY,P_OLDCARDNO,'',V_SEQNO,
							P_PACKAGETYPECODE,V_ACCOUNTTYPE,p_CITYCODE,
							P_CURROPER,P_CURRDEPT,P_RETCODE,P_RETMSG);
							
		IF P_RETCODE != '0000000000' THEN RAISE V_EX; END IF;
			EXCEPTION
			WHEN OTHERS THEN
				ROLLBACK; RETURN;
		END;
	END IF;

    P_RETCODE := '0000000000'; P_RETMSG  := '';
    COMMIT; RETURN;
END;
/

SHOW ERRORS
