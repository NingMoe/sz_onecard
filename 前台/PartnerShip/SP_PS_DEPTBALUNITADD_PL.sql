-- =============================================
-- AUTHOR:		LIUHE
-- CREATE DATE: 2011-12-27
-- DESCRIPTION:	网点结算单元增加
-- MODIFY: 
-- =============================================
CREATE OR REPLACE PROCEDURE SP_PS_DEPTBALUNITADD
(
	P_BALUNITNO        	CHAR,
    P_BALUNIT	         VARCHAR2,
    P_BALTYPE	 		CHAR,
    P_BANKCODE      	 CHAR,
    P_BANKACCNO	       	VARCHAR2,
    P_BALCYCLETYPECODE 	CHAR,
    P_BALINTERVAL	     INT,
    P_FINCYCLETYPECODE 	CHAR,
    P_FININTERVAL	     INT,
    P_FINTYPECODE	     CHAR,
    P_FINBANKCODE      	CHAR,
	P_WARNLINE        	INT,
	P_LIMITLINE			INT,
    P_LINKMAN	         VARCHAR2,
    P_UNITPHONE	       	VARCHAR2,
    P_UNITADD	         VARCHAR2,
    P_UNITEMAIL        	VARCHAR2,
    P_REMARK	         VARCHAR2,
    P_CURROPER         CHAR,
    P_CURRDEPT         CHAR,
    P_RETCODE          OUT CHAR ,
    P_RETMSG           OUT VARCHAR2
)
AS
    V_CURRDATE    DATE := SYSDATE;
    V_SEQNO       CHAR(16);
	V_COUNT 	  INT;
BEGIN

	--判断是否存在相同名称的结算单元,待审批
	SELECT	COUNT(*) INTO V_COUNT
	FROM  TF_B_DEPTBALTRADE  B, TH_DEPT_BALUNIT T
	WHERE B.TRADEID = T.TRADEID
		AND  B.STATECODE = '1'
		AND  (T.DBALUNIT  =  P_BALUNIT OR T.DBALUNITNO = P_BALUNITNO);

	IF V_COUNT > 0 THEN
		    p_retCode := 'S008107901';
            p_retMsg  := '存在相同名称或编码的结算单元为待审批状态';
			RETURN;
	END IF;

	--判断是否存在相同名称的结算单元,待审核
	SELECT	COUNT(*) INTO V_COUNT
	FROM  TF_B_DEPTBALTRADE_EXAM E, TH_DEPT_BALUNIT T
	WHERE E.TRADEID = T.TRADEID
		AND  E.STATECODE = '1'
		AND  (T.DBALUNIT  =  P_BALUNIT OR T.DBALUNITNO = P_BALUNITNO);

	IF V_COUNT > 0 THEN
		         p_retCode := 'S008107902';
            p_retMsg  := '存在相同名称或编码的结算单元为待审核状态';
			RETURN;
	END IF;

	--判断是否存在相同名称的结算单元,财审通过
	SELECT	COUNT(*) INTO V_COUNT
	FROM 	TF_DEPT_BALUNIT T
	WHERE	(T.DBALUNIT  =  P_BALUNIT OR T.DBALUNITNO = P_BALUNITNO)
		  AND T.USETAG = '1';

	IF V_COUNT > 0 THEN
		    p_retCode := 'S008107903';
            p_retMsg  := '存在相同名称或编码的结算单元';
			RETURN;
	END IF;

   -- 取tradeid
   SP_GETSEQ(SEQ => V_SEQNO);

   -- 写入台账
   BEGIN
		INSERT	INTO  TF_B_DEPTBALTRADE
			(TRADEID,DTRADETYPECODE,ASSOCIATECODE,OPERATESTAFFNO,
			OPERATEDEPARTID,OPERATETIME,STATECODE)
		VALUES	(V_SEQNO,'01',P_BALUNITNO,
				P_CURROPER,P_CURRDEPT,V_CURRDATE,'1');
	 EXCEPTION
       WHEN OTHERS THEN
         P_RETCODE := 'S008107081';
         P_RETMSG  := '写入网点结算单元变更台账表失败'|| SQLERRM;
         ROLLBACK; RETURN;
   END;

   -- 添加结算单元变更表
   BEGIN

	INSERT INTO TH_DEPT_BALUNIT
		  (TRADEID, DBALUNITNO, DBALUNIT, BANKCODE, BANKACCNO, CREATETIME,
		  BALCYCLETYPECODE, BALINTERVAL, FINCYCLETYPECODE, FININTERVAL, FINTYPECODE,
		  FINBANKCODE, LINKMAN, UNITPHONE, UNITADD, UNITEMAIL, USETAG, DEPTTYPE,
		  PREPAYWARNLINE, PREPAYLIMITLINE, UPDATESTAFFNO, UPDATETIME, REMARK)
	VALUES
		  (V_SEQNO, P_BALUNITNO, P_BALUNIT, P_BANKCODE, P_BANKACCNO, V_CURRDATE,
		  P_BALCYCLETYPECODE, P_BALINTERVAL, P_FINCYCLETYPECODE, P_FININTERVAL, P_FINTYPECODE,
		  P_FINBANKCODE, P_LINKMAN, P_UNITPHONE, P_UNITADD, P_UNITEMAIL, '1', P_BALTYPE,
		  P_WARNLINE, P_LIMITLINE, P_CURROPER, SYSDATE, P_REMARK);

    EXCEPTION
       WHEN OTHERS THEN
         P_RETCODE := 'S008107082';
         P_RETMSG  := '写入网点结算单元变历史表失败'|| SQLERRM;
         ROLLBACK; RETURN;
   END;


   P_RETCODE := '0000000000';
   P_RETMSG  := '';
   COMMIT; RETURN;

END;



/
SHOW ERRORS
								







