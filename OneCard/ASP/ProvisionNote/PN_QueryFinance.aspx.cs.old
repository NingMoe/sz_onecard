using System;
using System.Data;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Master;
using Common;
using PDO.ProvisionNote;
using System.IO;
using NPOI.HSSF.UserModel;

public partial class ASP_ProvisionNote_PN_QueryFinance : Master.ExportMaster
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            gvResult.DataSource = new DataTable();
            gvResult.DataBind();

            gvDetail.DataSource = new DataTable();
            gvDetail.DataBind();
        }
    }


    private double inCount = 0;
    private double outCount = 0;
    private double bankCount = 0;
    private double businessCount = 0;

    protected void gvResult_RowDataBound(object sender, GridViewRowEventArgs e)
    {

        if (gvResult.ShowFooter && e.Row.RowType == DataControlRowType.DataRow)
        {
            inCount += Convert.ToDouble(GetTableCellValue(e.Row.Cells[1]));
            outCount += Convert.ToDouble(GetTableCellValue(e.Row.Cells[2]));
            bankCount += Convert.ToDouble(GetTableCellValue(e.Row.Cells[3]));
            businessCount += Convert.ToDouble(GetTableCellValue(e.Row.Cells[4]));
        }
        else if (e.Row.RowType == DataControlRowType.Footer)  //页脚 
        {
            e.Row.Cells[0].Text = "总计";
            e.Row.Cells[1].Text = inCount.ToString("n");
            e.Row.Cells[2].Text = outCount.ToString("n");
            e.Row.Cells[3].Text = bankCount.ToString("n");
            e.Row.Cells[4].Text = businessCount.ToString("n");
        }
    }

    protected void gvDetail_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (gvResult.ShowFooter && e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[1].Text = (Convert.ToDecimal(e.Row.Cells[1].Text) / 100).ToString();
        }
    }


    public void gvResult_RowCreated(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            //注册行单击事件
            e.Row.Attributes.Add("onclick", "javascirpt:__doPostBack('gvResult','Select$" + e.Row.RowIndex + "')");
        }
    }

    /// <summary>
    /// 行点击取得银行编号、银行名称
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    public void gvResult_SelectedIndexChanged(object sender, EventArgs e)
    {

        SP_PN_QueryPDO pdo = new SP_PN_QueryPDO();
        pdo.funcCode = "QUERYFINANCE_LIST";
        pdo.var1 = gvResult.SelectedRow.Cells[0].Text.Trim();       //文件日期


        StoreProScene storePro = new StoreProScene();
        DataTable data = storePro.Execute(context, pdo);

        if (data == null || data.Rows.Count == 0)
        {
            AddMessage("N005030001: 查询结果为空");
        }

        UserCardHelper.resetData(gvDetail, data);
    }

    private string GetTableCellValue(TableCell cell)
    {
        string s = cell.Text.Trim();
        if (s == "&nbsp;" || s == "")
            return "0";
        return s;
    }

    // 查询输入校验处理
    private void validate()
    {
        Validation valid = new Validation(context);

        bool b1 = Validation.isEmpty(txtFromDate);
        bool b2 = Validation.isEmpty(txtToDate);
        DateTime? fromDate = null, toDate = null;
        if (b1 || b2)
        {
            context.AddError("开始日期和结束日期必须填写");
        }
        else
        {
            if (!b1)
            {
                fromDate = valid.beDate(txtFromDate, "开始日期范围起始值格式必须为yyyyMMdd");
            }
            if (!b2)
            {
                toDate = valid.beDate(txtToDate, "结束日期范围终止值格式必须为yyyyMMdd");
            }
        }

        if (fromDate != null && toDate != null)
        {
            valid.check(fromDate.Value.CompareTo(toDate.Value) <= 0, "开始日期不能大于结束日期");
        }
    }

    // 查询处理
    protected void btnQuery_Click(object sender, EventArgs e)
    {
        validate();
        if (context.hasError()) return;

        SP_PN_QueryPDO pdo = new SP_PN_QueryPDO();
        pdo.funcCode = "QUERYFINANCE";
        pdo.var1 = txtFromDate.Text;
        pdo.var2 = txtToDate.Text;


        StoreProScene storePro = new StoreProScene();
        DataTable data = storePro.Execute(context, pdo);

        if (data == null || data.Rows.Count == 0)
        {
            AddMessage("N005030001: 查询结果为空");
        }

        inCount = 0;
        outCount = 0;
        bankCount = 0;
        businessCount = 0;
        UserCardHelper.resetData(gvResult, data);
    }

    public void gvDetail_Page(Object sender, GridViewPageEventArgs e)
    {
        gvDetail.PageIndex = e.NewPageIndex;
        gvResult_SelectedIndexChanged(sender, e);
    }

    #region 导出报表

    protected void btnExport_Click(object sender, EventArgs e)
    {
        validate();
        if (context.hasError()) return;

        string date = txtToDate.Text.Trim();

        //设置每个Sheet页日期
        string title = "(" + date.Substring(0, 4) + "年" + date.Substring(4, 2) + "月)";

        string temPath = HttpContext.Current.Server.MapPath("../../") + "Tools\\备付金核对模板.xls";

        #region 导出功能
        try
        {
            FileStream file = new FileStream(temPath, FileMode.Open, FileAccess.Read);//读入excel模板
            HSSFWorkbook workbook = new HSSFWorkbook(file); //展开工作簿

            //REPORT1-SZYH
            DataTable dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "SZYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (苏州)", title, 10);

            //REPORT1-NYYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "NYYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (农行)", title, 10);

            //REPORT1-ZZYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "ZGYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (中行)", title, 10);

            //REPORT1-GSYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "GSYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (工行)", title, 10);

            //REPORT1-JTYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "JTYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (交行)", title, 10);

            //REPORT1-CBYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "CBYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (建行)", title, 10);

            //REPORT1-GDYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "GDYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (光大)", title, 10);

            //REPORT1-JSYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "JSYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (江苏)", title, 10);

            //REPORT1-NJYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "NJYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (南京)", title, 10);

            //REPORT1-HFYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "HFYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (恒丰)", title, 10);

            //REPORT1-NBYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "NBYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (宁波)", title, 10);

            //REPORT1-ZSYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT1", date, "ZSYH", "19");
            workbook = NPOI(workbook, dt, "表1-1 (招商)", title, 10);

            //REPORT2
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT2", date, "ONEC", "9");
            workbook = NPOI(workbook, dt, "表1-2", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "SZYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (苏州)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "NYYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (农行)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "ZGYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (中行)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "GSYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (工行)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "JTYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (交行)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "JSYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (建行)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "GDYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (光大)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "JSYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (江苏)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "NJYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (南京)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "HFYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (恒丰)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "NBYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (宁波)", title, 7);

            //REPORT2
            dt = queryDt("QUERYREPORT_2", "TF_F_BFJ_REPORT2", date, "ZSYH", "9");
            workbook = NPOI(workbook, dt, "表1-2 (招商)", title, 7);

            //REPORT3
            dt = queryDt("QUERYREPORT3", "", date, "", "");
            workbook = NPOI(workbook, dt, "表1-3", title, 5,3);

            //REPORT4
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT4", date, "", "4");
            workbook = NPOI(workbook, dt, "表1-4", title, 4);

            //REPORT5
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT5", date, "", "6");
            workbook = NPOI(workbook, dt, "表1-5", title, 5);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "SZYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (苏州)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "NYYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (农行)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "ZGYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (中行)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "GSYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (工行)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "JTYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (交行)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "CBYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (建行)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "GDYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (光大)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "JSYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (江苏)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "NJYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (南京)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "HFYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (恒丰)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "NBYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (宁波)", title, 8);

            //REPORT6
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT6", date, "ZSYH", "25");
            workbook = NPOI(workbook, dt, "表1-6 (招商)", title, 8);

            //REPORT7
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT7", date, "", "4");
            workbook = NPOI(workbook, dt, "表1-7", title, 4);

            //REPORT8
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT8", date, "", "4");
            workbook = NPOI(workbook, dt, "表1-8", title, 4);

            //REPORT9-汇总
            dt = queryDt("QUERYSEP9_NEW", "TF_F_BFJ_REPORT9", date, "", "4");
            workbook = NPOI(workbook, dt, "表1-9", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "SZYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (苏州)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "NYYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (农行)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "ZGYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (中行)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "GSYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (工行)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "JTYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (交行)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "CBYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (建行)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "GDYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (光大)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "JSYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (江苏)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "NJYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (南京)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "HFYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (恒丰)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "NBYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (宁波)", title, 5);

            //REPORT9
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT9", date, "ZSYH", "4");
            workbook = NPOI(workbook, dt, "表1-9 (招商)", title, 5);

            //REPORT10-汇总
            dt = queryDt("QUERYREPORTSUM", "TF_F_BFJ_REPORT10", date, "", "24");
            workbook = NPOI(workbook, dt, "表1-10", title, 7);

            //REPORT10-SZYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "SZYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (苏州)", title, 7);

            //REPORT10-NYYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "NYYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (农行)", title, 7);

            //REPORT10-ZGYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "ZGYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (中行)", title, 7);

            //REPORT10-GSYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "GSYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (工行)", title, 7);

            //REPORT10-JTYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "JTYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (交行)", title, 7);

            //REPORT10-CBYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "CBYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (建行)", title, 7);

            //REPORT10-GDYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "GDYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (光大)", title, 7);

            //REPORT10-HFYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "HFYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (恒丰)", title, 7);

            //REPORT10-NBYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "NBYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (宁波)", title, 7);

            //REPORT10-ZSYH
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT10", date, "ZSYH", "24");
            workbook = NPOI(workbook, dt, "表1-10 (招商)", title, 7);

            //REPORT13
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT13", date, "", "6");
            workbook = NPOI(workbook, dt, "表1-13", title, 5);

            //REPORT2-1
            dt = queryDt("QUERYREPORT", "TF_F_BFJ_REPORT2_1", date, "", "43");
            workbook = NPOI(workbook, dt, "附2-1", title, 7);

            //给REPORT1的H列单独赋值
            dt = queryDt("QUERYREPORT_1_H", "TF_F_BFJ_REPORT1", date, "", "");
            
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                workbook = SetValue(workbook, "表1-1", double.Parse(dt.Rows[i][0].ToString()), 9 + i, 10);
            }

            //给REPORT1-12的19行单独赋值
            //dt = queryDt("QUERYREPORT_12_19", "", date, "", "");

            //for (int i = 0; i < dt.Columns.Count; i++)
            //{
            //    workbook = SetValue(workbook, "表1-12", dt.Rows[0][i].ToString(), 18, 1 + i);
            //}

            //单独给附2-1
            //取上个月最后一天
            DateTime time1 = DateTime.ParseExact(date, "yyyyMMdd", null);
            time1 = time1.AddDays(-time1.Day);

            dt = queryDt("QUERYSPE", "TF_F_BFJ_REPORT2_1", time1.ToString("yyyyMMdd"), "", "15");
            workbook = SetValue(workbook, "附2-1", GetValue(dt), 5, 45);

            //
            workbook = SetValue(workbook, "附2-1", "0.00", 6 + DateTime.ParseExact(date, "yyyyMMdd", null).Day, 45);

            //单独给表1-9的B38至E38赋值
            dt = queryDt("QUERYSPE_9", "C1", date, "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 35, 1);

            dt = queryDt("QUERYSPE_9", "C2", date, "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 35, 2);

            dt = queryDt("QUERYSPE_9", "C3", date, "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 35, 3);

            dt = queryDt("QUERYSPE_9", "C4", date, "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 35, 4);

            //单独给表1-9的B39 E39赋值
            dt = queryDt("QUERYSPE_9", "C1", time1.ToString("yyyyMMdd"), "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 36, 1);

            dt = queryDt("QUERYSPE_9", "C2", time1.ToString("yyyyMMdd"), "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 36, 2);

            dt = queryDt("QUERYSPE_9", "C3", time1.ToString("yyyyMMdd"), "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 36, 3);

            dt = queryDt("QUERYSPE_9", "C4", time1.ToString("yyyyMMdd"), "", "");
            workbook = SetValue(workbook, "表1-9", GetValue(dt), 36, 4);

            SaveExcel(workbook);
        }
        catch (Exception ex)
        {
            context.AddError("下载报表有误。错误信息：" + ex.Message);
        }

        #endregion
    }

    /// <summary>
    /// 取DataTable集合值
    /// </summary>
    /// <param name="dt"></param>
    /// <returns></returns>
    protected string GetValue(DataTable dt)
    {
        if (dt != null && dt.Rows.Count != 0)
        {
            return dt.Rows[0][0].ToString();
        }
        else
        {
            return string.Empty;
        }
    }

    /// <summary>
    /// sheet日期赋值
    /// </summary>
    /// <param name="workbook"></param>
    /// <param name="sheetName"></param>
    /// <param name="titleName"></param>
    /// <returns></returns>
    public static HSSFWorkbook SetDate(HSSFWorkbook workbook, string sheetName, string titleName)
    {
        return SetValue(workbook, sheetName, titleName, 1, 0);
    }

    /// <summary>
    /// 特殊情况单个单元格给值
    /// </summary>
    /// <param name="workbook"></param>
    /// <param name="sheetName"></param>
    /// <param name="value"></param>
    /// <param name="rowIndex"></param>
    /// <param name="cellIndex"></param>
    /// <returns></returns>
    public static HSSFWorkbook SetValue(HSSFWorkbook workbook, string sheetName, string value, int rowIndex, int cellIndex)
    {
        HSSFSheet sheet = workbook.GetSheet(sheetName);
        if (sheet.GetRow(rowIndex) == null)
        {
            sheet.CreateRow(rowIndex);
        }
        HSSFRow headerRow = sheet.GetRow(rowIndex);
        if (headerRow.GetCell(cellIndex) == null)
        {
            headerRow.CreateCell(cellIndex);
        }
        HSSFCell headerCell = headerRow.GetCell(cellIndex);
        headerCell.SetCellValue(value);

        return workbook;
    }

    public static HSSFWorkbook SetValue(HSSFWorkbook workbook, string sheetName, double value, int rowIndex, int cellIndex)
    {
        HSSFSheet sheet = workbook.GetSheet(sheetName);
        HSSFRow headerRow = sheet.GetRow(rowIndex);
        if (headerRow.GetCell(cellIndex) == null)
        {
            headerRow.CreateCell(cellIndex);
        }
        HSSFCell headerCell = headerRow.GetCell(cellIndex);
        headerCell.SetCellValue(value);

        return workbook;
    }

    public void SaveExcel(HSSFWorkbook workbook)
    {

        //*************NPOI导出时指定所有SHEET页自动计算公式****************
        for (int i = 0; i < workbook.NumberOfSheets; i++)
        {
            HSSFSheet sheet = workbook.GetSheetAt(i);
            sheet.ForceFormulaRecalculation = true;
        }

        MemoryStream ms = new MemoryStream();
        using (ms)
        {
            workbook.Write(ms);
            //ms.Flush();
            //ms.Position = 0;
            //sheet = null;
            //workbook = null;
            byte[] data = ms.ToArray();
            //fs.Write(data, 0, data.Length);

            #region 客户端保存
            HttpResponse response = System.Web.HttpContext.Current.Response;
            response.Clear();
            //Encoding pageEncode = Encoding.GetEncoding(PageEncode);
            response.Charset = "UTF-8";
            response.ContentType = "application/vnd-excel";//"application/vnd.ms-excel";
            System.Web.HttpContext.Current.Response.AddHeader("Content-Disposition", string.Format("attachment; filename=report_" + txtToDate.Text.Substring(4, 2) + ".xls"));
            System.Web.HttpContext.Current.Response.BinaryWrite(data);
            #endregion
        }
    }


    public static HSSFWorkbook NPOI(HSSFWorkbook workbook, DataTable dt, string sheetName, string titleName, int rowIndex)
    {
        return NPOI(workbook, dt, sheetName, titleName, rowIndex, 0,1);
    }

    public static HSSFWorkbook NPOI(HSSFWorkbook workbook, DataTable dt, string sheetName, string titleName, int rowIndex,int columnIndex)
    {
        return NPOI(workbook, dt, sheetName, titleName, rowIndex, 0, columnIndex);
    }

    /// <summary>
    /// 生成WORKBOOK数据
    /// </summary>
    /// <param name="workbook">工作簿</param>
    /// <param name="dt">数据源</param>
    /// <param name="sheetName">SHEETNAME</param>
    /// <param name="titleName">TITLENAME</param>
    /// <param name="rowIndex">开始索引</param>
    /// <param name="addRow">下次数据列可能增加的行,无则为0</param>
    /// <returns>生成的WORKBOOK数据</returns>
    public static HSSFWorkbook NPOI(HSSFWorkbook workbook, DataTable dt, string sheetName, string titleName, int rowIndex, int addRow,int columnStartIndex)
    {
        //MemoryStream ms = new MemoryStream();
        int totalIndex = 50;                        // 每个类别的总行数
        rowIndex = rowIndex - 1;                    // 起始行 索引0开始，减1
        int dtRowIndex = dt.Rows.Count;       // DataTable的数据行数

        HSSFSheet sheet = workbook.GetSheet(sheetName);
        //sheet.ForceFormulaRecalculation = true;

        #region 表头
        HSSFRow headerRow = sheet.GetRow(1);
        HSSFCell headerCell = headerRow.GetCell(0);
        headerCell.SetCellValue(titleName);
        #endregion

        foreach (DataRow row in dt.Rows)
        {
            #region 填充内容
            HSSFRow dataRow = sheet.GetRow(rowIndex);

            int columnIndex = columnStartIndex;        // 开始列（0为标题列，从1开始）
            foreach (DataColumn column in dt.Columns)
            {
                // 列序号赋值
                if (columnIndex > dt.Columns.Count+columnStartIndex)
                    break;

                HSSFCell newCell = dataRow.GetCell(columnIndex);
                if (newCell == null)
                    newCell = dataRow.CreateCell(columnIndex);

                string drValue = row[column].ToString();

                ////为0不赋值
                //if (!string.IsNullOrEmpty(drValue))
                //{
                //    if (drValue == "0")
                //    {
                //        columnIndex++;
                //        continue;
                //    }
                //}

                switch (column.DataType.ToString())
                {
                    case "System.String"://字符串类型
                        newCell.SetCellValue(drValue);
                        break;
                    case "System.DateTime"://日期类型
                        DateTime dateV;
                        DateTime.TryParse(drValue, out dateV);
                        newCell.SetCellValue(dateV);

                        break;
                    case "System.Boolean"://布尔型
                        bool boolV = false;
                        bool.TryParse(drValue, out boolV);
                        newCell.SetCellValue(boolV);
                        break;
                    case "System.Int16"://整型
                    case "System.Int32":
                    case "System.Int64":
                    case "System.Byte":
                        int intV = 0;
                        int.TryParse(drValue, out intV);
                        newCell.SetCellValue(intV);
                        break;
                    case "System.Decimal"://浮点型
                    case "System.Double":
                        double doubV = 0;
                        double.TryParse(drValue, out doubV);
                        newCell.SetCellValue(doubV);
                        break;
                    case "System.DBNull"://空值处理
                        newCell.SetCellValue("");
                        break;
                    default:
                        newCell.SetCellValue("");
                        break;
                }
                columnIndex++;
            }
            #endregion

            rowIndex = rowIndex + 1 + addRow;
        }


        // 格式化当前sheet，用于数据total计算
        sheet.ForceFormulaRecalculation = true;

        return workbook;
    }

    /// <summary>
    /// 查询出报表内容
    /// </summary>
    /// <param name="funcCode">funcCode</param>
    /// <param name="tableName">表名</param>
    /// <param name="date">需导出的日期</param>
    /// <param name="bankCode">银行编号</param>
    /// <param name="stCount">字段个数</param>
    /// <returns>DataTable</returns>
    protected DataTable queryDt(string funcCode, string tableName, string date, string bankCode, string stCount)
    {
        SP_PN_QueryPDO pdo = new SP_PN_QueryPDO();
        pdo.funcCode = funcCode;
        pdo.var1 = tableName;
        pdo.var2 = date;
        pdo.var3 = bankCode;
        pdo.var4 = stCount;


        StoreProScene storePro = new StoreProScene();
        DataTable data = storePro.Execute(context, pdo);

        return data;
    }
    #endregion
}

